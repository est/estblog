<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Est's Blog</title><link>https://blog.est.im/</link><description>This blog is rated&amp;nbsp;&amp;nbsp;R⃣ , viewer discretion is advised</description><lastBuildDate>Thu, 10 Feb 2022 22:26:32 +0000</lastBuildDate><item><title>今日笑点：网友指出cloudflared隧道ssh违反了TOS，被CF CTO亲自下场纠正</title><link>https://blog.est.im/2022/stdin-01</link><description>&lt;blockquote&gt;
&lt;p&gt;codingpanic 1 hour ago: I'm under the impression that this is against CloudFlare's ToS, otherwise I'd probably be doing it myself.&lt;br /&gt;
jgrahamc 56 minutes ago: That's for Cloudflare's CDN/reverse-proxy service. This is the correct one for Cloudflare Tunnel: https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/license&lt;br /&gt;
neurostimulant 8 minutes …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 10 Feb 2022 22:26:32 +0000</pubDate><guid isPermaLink="false">tag:None,2022-02-10:/2022/stdin-01</guid></item><item><title>笑话了千年刻舟求剑，水面搜救的图案却叫Victor Sierra</title><link>https://blog.est.im/2022/stdout-02</link><description>&lt;p&gt;今天的第一个收获，Victor Sierra这个搜救图案&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/2022/stdout-02-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/2022/stdout-02-02.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;来自 &lt;a href="https://www.youtube.com/watch?v=aoXJfuPaFF8"&gt;Why This Zig-Zag Coast Guard Search Pattern is Actually Genius - Smarter Every Day 268&lt;/a&gt;，是美国 coast guard 标准化的水面搜救路线&lt;strong&gt;之一&lt;/strong&gt;。这种图案覆盖的面最大并且效率最高，而且最重要的一点，考虑到水是流动的，能够跟随一起漂流的相对速度去找到 PIW (person in water)&lt;/p&gt;
&lt;p&gt;于是我就想起大家都熟悉的成语——「刻舟求剑」。这是2000多年前一个河南贩子吕不韦编的一个讥讽九头鸟的段子，由于这个成语太熟悉了，我甚至开始怀疑课本上是不是掐头去尾没讲完，跟之前那个「&lt;a href="/202004/stdin-001"&gt;守株待兔&lt;/a&gt;」恶毒的政治隐喻一样，于是去翻了下原文。好家伙，不能说雷同，简直就是一模一样。它出自《&lt;a href="https://ctext.org/lv-shi-chun-qiu/cha-jin/zhs"&gt;吕氏春秋·察今&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;察今一共三段，第一段说，按着先人制度惯性因循守旧的人都是大沙雕；第二段说 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 19 Jan 2022 23:15:24 +0000</pubDate><guid isPermaLink="false">tag:None,2022-01-19:/2022/stdout-02</guid></item><item><title>python-phoenixdb 设置读取超时</title><link>https://blog.est.im/2022/stdout-01</link><description>&lt;p&gt;PhoenixDB 居然是基于 requests + pb2 做的传输层协议。连接的是 queryserver 的 http 接口&lt;/p&gt;
&lt;p&gt;看 &lt;a href="https://git-wip-us.apache.org/repos/asf?p=phoenix-queryserver.git;a=blob;f=python-phoenixdb/phoenixdb/avatica/client.py"&gt;avatica/client.py 源码&lt;/a&gt; 可以得知这玩意默认是不支持设置read timeout的。强行hack一个：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import phoenixdb
import functools
c = phoenixdb.connect('http://localhost:8765/', autocommit=True, auth=&amp;quot;SPNEGO&amp;quot;)
c._client.session.request = functools.partial(c._client.session.request, timeout=2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;partial&lt;/code&gt; 这个神奇的魔法可以设置一个默认参数。其它地方传入了别的timeout也可以自行覆盖，无缝兼容。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 11 Jan 2022 12:00:56 +0000</pubDate><guid isPermaLink="false">tag:None,2022-01-11:/2022/stdout-01</guid></item><item><title>信息时代 的 娃</title><link>https://blog.est.im/2022/stderr-01</link><description>&lt;p&gt;家里的娃逐渐长大，TA在车上喜欢听的歌曲就翻来覆去奥特曼的 OP 和 ED。然后想引导TA 们听点别的，QQ音乐又没有买会员，一些好的大部头作品，能搜出来的就是各种翻唱或者自媒体的同标题蹭流量的垃圾作品，很无奈。&lt;/p&gt;
&lt;p&gt;想起来自己小时候虽然家庭条件一般，但是也是买了收录机和一些经典磁带，能够把自己喜欢的歌曲反复听个够。反复听歌有个好处，那就是专注力的训练，和重复带来的高准确度记忆。现在的娃听歌，由于点播太方便，经常听一半就切歌，然后上一次点的不一定能recall点出来。还有版权的原因，前一阵加星的歌可能过一阵就听不了了。这样的环境，只能培养出很糟糕的听众和很低的欣赏水平吧。&lt;/p&gt;
&lt;p&gt;也恰好从&lt;a href="https://www.bilibili.com/video/BV1Gx411J7Qe"&gt;【箭厂视频】消失了20年后，中国黑胶唱片工厂复活&lt;/a&gt; 看到一个评论，很是有感触&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ikyokyo 2017-08-18 13:27&lt;br /&gt;
作为一个黑胶时代过来，并且家里曾经有过黑胶唱片机的人，我想分享一些当年的旁门左道和玩黑胶奇技yin巧，这些事不是每个听黑胶的人都知道，有些人知道也不会说。&lt;br /&gt;
1.黑胶唱片机到后期，已经十分自动化了，按下播放键以后，唱针会自动挪到唱片开始的位置，然后缓缓下降，按下停止键或者放完以后也会自动停止并归位，一切都是由机械实现的。&lt;br /&gt;
2.换歌需要手动把唱针抬起来 …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Mon, 10 Jan 2022 22:13:39 +0000</pubDate><guid isPermaLink="false">tag:None,2022-01-10:/2022/stderr-01</guid></item><item><title>Zizek 和盗版</title><link>https://blog.est.im/2021/stdin-017</link><description>&lt;blockquote&gt;
&lt;p&gt;齐泽克先生在2007 年第一次到中国来访问，他在我们这里待了一个星期，他讲了一个故事，是跟中国有关的。他讲了什么呢？就是有一天，他在美国的录像店门口，看到这么一句话：“不要买盗版光碟，买盗版，就等于支持共产主义”。因为，很大一部分盗版光碟都是中国生产的，所以美国人非常恼火这个知识产权的问题。齐泽克跟我说：“一看到这个标语我就非常兴奋，我就偏要买盗版”。这是为什么呢，因为这些左派思想家有个非常重要的观点是，数码时代实际上是私有制真正破产的时代，因为复制太容易了。我们后面讲到鲍德里亚就会讲到文本的消失，就是拟真性是讲什么呢，是讲过去我们有个手稿，一写一个手稿然后很珍贵。现在我们有电脑，就大家在电脑上面写作业的时候有没有想过一个问题：以后我们是一个无档案的时代，因为你没有原始手稿，你最后交给出版社的，如果你没有故意储存，也就是说每修改一次储存一次的话，你修改的痕迹都没有。所以齐泽克在南京，他跟我讲，哪有卖盗版的？我就是要买！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="/images/2021/stdin-017-1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;从 &lt;a href="https://www.zhihu.com/question/494242235/answer/2237418578"&gt;如何看待俄虚拟主播因翻唱《喀秋莎》被索要版权费？&lt;/a&gt; 看到的 &lt;a href="https://ptext.nju.edu.cn/b9/03/c12209a243971/page.htm"&gt;张异宾：《鲍德里亚：欢迎来到真实的荒漠——从电影&amp;lt;骇客帝国&amp;gt;谈起》&lt;/a&gt;。后者有从 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 30 Dec 2021 15:06:03 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-30:/2021/stdin-017</guid></item><item><title>Microsoft 官网的 403 错误</title><link>https://blog.est.im/2021/stdout-028</link><description>&lt;pre&gt;&lt;code&gt;$ curl -H &amp;quot;User-Agent: User-Agent: Mozilla/5&amp;quot; -kvs 'http://www.microsoft.com'
*   Trying 118.123.102.107...
* TCP_NODELAY set
* Connected to www.microsoft.com (118.123.102.107) port 80 (#0)
&amp;gt; GET / HTTP/1.1
&amp;gt; Host: www.microsoft.com
&amp;gt; Accept: */*
&amp;gt; User-Agent: User-Agent: Mozilla/5
&amp;gt;
&amp;lt; HTTP/1.1 403 Forbidden
&amp;lt; Server: GHost …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 29 Dec 2021 22:42:14 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-29:/2021/stdout-028</guid></item><item><title>Chrome 阉割指南</title><link>https://blog.est.im/2021/stdout-027</link><description>&lt;p&gt;不折腾不舒服。继之前 &lt;a href="/2021/stdout-020"&gt;Edge调教&lt;/a&gt; 之后记录一下 Chrome V70怎么阉割。&lt;/p&gt;
&lt;p&gt;下载：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dl.google.com/edgedl/release2/chrome/ALiXMYM2w8-h_70.0.3538.77/70.0.3538.77_chrome_installer.exe"&gt;win 32&lt;/a&gt; | &lt;a href="https://dl.google.com/edgedl/release2/chrome/AJ7ozxk4OLvN_70.0.3538.77/70.0.3538.77_chrome_installer.exe"&gt;win 64&lt;/a&gt; | &lt;a href="https://redirector.gvt1.com/release2/chrome/AIJolai8dEil_70.0.3538.67/GoogleChrome-70.0.3538.67.dmg"&gt;Mac&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上面的链接已经年久失修了，对比了一下获取最新版本的脚本发现 Google 已经不提供老链接了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -vsk 'https://tools.google.com/service/update2' -HContent-Type:text/xml --data-binary &amp;quot;&amp;lt;?xml version='1.0' encoding='UTF-8'?&amp;gt;
&amp;lt;request protocol='3.0' sessionid='{est-blog}' installsource='ondemandcheckforupdate' dedup='cr'&amp;gt;
&amp;lt;os platform='mac' version='66.6 …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 28 Dec 2021 23:00:05 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-28:/2021/stdout-027</guid></item><item><title>认识「洋节」</title><link>https://blog.est.im/2021/stdout-026</link><description>&lt;p&gt;都说 xmas eve 是洋节，我们就来数一数到底有哪些洋节&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;元旦1月1日。由北「洋」军阀袁世凯设立。依据是内务部总长朱启钤《定四季节假呈》，把原来农历（夏历）的正月初一的「元旦」挪用到了格里历一月一日。格里历(Gregorian calendar)引入中国是1912，元旦正式生效是1914年。&lt;/li&gt;
&lt;li&gt;春节。严格的来说，传统春节是二十四节气中的“立春”，是太阳历。后来被袁世凯直接拍板成农历正月初一。而夏历正月初一一般被认为是最接近立春之朔日（月缺之日）。农历最后一次农历大改版为《授时历》，发生在崇祯二年（1629年）九月，由礼部左侍郎徐光启发起，编撰者：耶稣会的龙华民（西西里人）、罗雅谷（米兰人）、邓玉函（瑞士人）、汤若望（日耳曼人）。&lt;/li&gt;
&lt;li&gt;生肖其实不跟农历绑定，而是跟 二十四节气绑定。二十四节气最后一次改版，也是上面那个《时宪历 …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Fri, 24 Dec 2021 23:59:59 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-24:/2021/stdout-026</guid></item><item><title>如何可视化跟踪分析 Python import 耗时</title><link>https://blog.est.im/2021/stdout-025</link><description>&lt;p&gt;首先在本地安装 &lt;code&gt;pip install tuna&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后跑个分，需要 &lt;code&gt;CPython &amp;gt;= 3.7&lt;/code&gt;，输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PYTHONPROFILEIMPORTTIME=1 python3 myscript.py 2&amp;gt;1.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="tuna" src="https://camo.githubusercontent.com/d76ac242a42f9c394c1ae66da655173a51d9ed9c09107dd8d42b684c15aa2d05/68747470733a2f2f6e7363686c6f652e6769746875622e696f2f74756e612f666f6f2e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;然后 &lt;code&gt;tuna 1.log&lt;/code&gt; ，会自动打开浏览器围观 &lt;code&gt;import&lt;/code&gt; 耗时分布。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 22 Dec 2021 14:00:28 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-22:/2021/stdout-025</guid></item><item><title>4句话自动换win10壁纸</title><link>https://blog.est.im/2021/stdout-024</link><description>&lt;ol&gt;
&lt;li&gt;获取当前用户 &lt;code&gt;sid&lt;/code&gt;。cmd下设变量如此复杂。而且 &lt;code&gt;|&lt;/code&gt; 的转义字符居然是 &lt;code&gt;^|&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;读取 LogonUI 的自动壁纸。&lt;code&gt;reg query&lt;/code&gt;输出极其不友好。需要 tokens=3&lt;/li&gt;
&lt;li&gt;设置为当前桌面。&lt;/li&gt;
&lt;li&gt;刷新。这个属于按运气成功。真正刷新的需要调用 dll 。算了&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;for /f %%g in ('wmic useraccount where name^=&amp;quot;%USERNAME%&amp;quot; get sid ^| findstr ^S\-d*') do set USERSID=%%g
For /f &amp;quot;tokens=3&amp;quot; %%k IN ('reg query HKLM\SOFTWARE\Microsoft\Windows …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 08 Dec 2021 21:39:36 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-08:/2021/stdout-024</guid></item><item><title>FastAPI/Starlette支持静态文件支持SPA</title><link>https://blog.est.im/2021/stdout-023</link><description>&lt;p&gt;FastAPI 官方支持 &lt;code&gt;from fastapi.staticfiles import StaticFiles&lt;/code&gt; 充当一个静态文件服务器&lt;/p&gt;
&lt;p&gt;其实实现是 starlette。这玩意可以在 &lt;code&gt;directory&lt;/code&gt; 下放一个 &lt;code&gt;404.html&lt;/code&gt;，恰好单页应用也需要用 &lt;code&gt;index.html&lt;/code&gt; 充当所有 javascript 框架注册的 router&lt;/p&gt;
&lt;p&gt;只是有一个毛病，这货返回的 HTTP status code 是 404。用起来没啥大毛病，但是就是浏览器不会记录网址，导致没法匹配浏览历史快速找到之前访问过的页面。&lt;/p&gt;
&lt;p&gt;拿来改改继续用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from starlette.staticfiles import StaticFiles, Scope, Headers, Response, FileResponse

class StaticFilesWithout404(StaticFiles):
    async def get_response(self, path …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 08 Dec 2021 07:38:38 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-08:/2021/stdout-023</guid></item><item><title>人工构造Flask session模拟cookie登陆</title><link>https://blog.est.im/2021/stdout-022</link><description>&lt;p&gt;有没有好奇为什么 Flask 配置必须要求一个 &lt;a href="https://flask.palletsprojects.com/en/latest/config/#SECRET_KEY"&gt;SECRET_KEY&lt;/a&gt;，然后就可以在浏览器保存一个 session 状态读写数据。&lt;/p&gt;
&lt;p&gt;这里记一下它的底层实现，其实需要依赖的包是 &lt;a href="https://itsdangerous.palletsprojects.com/"&gt;itsdangerous&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import hashlib
from itsdangerous import URLSafeTimedSerializer
URLSafeTimedSerializer(
        'YOUR_SECRET_KEY',  # from pyxis/config/prod.py
        'cookie-session',  # from flask.sessions.SecureCookieSessionInterface.salt
        # serializer=TaggedJSONSerializer(),
        signer_kwargs={'key_derivation': 'hmac', 'digest_method': hashlib.sha1}
).dumps({
    "your_key": "your_value"
})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;别人如果拿到你的 &lt;code&gt;SECRET_KEY&lt;/code&gt; 就可以伪造任意 session cookie 了&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 08 Dec 2021 07:15:03 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-08:/2021/stdout-022</guid></item><item><title>苏35的UI汉化</title><link>https://blog.est.im/2021/stdin-016</link><description>&lt;p&gt;&lt;a href="https://www.zhihu.com/question/304693612/answer/2250648177"&gt;原文&lt;/a&gt;禁止转载，那我就转载原文的&lt;a href="https://mil.sina.cn/sd/2016-10-11/detail-ifxwrhpm2928730.d.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日前，俄罗斯《消息报》采访了俄罗斯无线电电子技术集团（俄罗斯技术集团下属企业）副总经理吉维∙占季加夫，该集团是苏-35几乎所有航电系统的研制生产单位。&lt;br /&gt;
占季加夫表示，“根据订购方的国情要求改装机载设备是重要的技术程序之一，一年多来我们都在致力于将驾驶舱内的信息翻译成汉语。但是，不像斯拉夫和拉丁字母，汉语的象形文字“很难”在LCD显示器上阅读。最终，中方要求维持原样，即显示器上保留西里尔字母。中国飞行员已有驾驶俄苏-27战机的飞行经验，该飞机的驾驶舱同样没有为中国进行改装，但飞行员们‘阅读’俄语的机上信息。”&lt;br /&gt;
该报称，苏-35显示器上译成汉语的仪表读数说明和指令太过微小和模糊，以致难以阅读。通过扩大显示器的尺寸可以解决该问题，但这样就要彻底改造驾驶舱，研制和试验需要额外的资金和时间，中方伙伴并不希望这样。&lt;br /&gt;
报道还指出，提供给中国的苏-35飞机唯一的特殊之处是在机载系统中加入了中国的“北斗”卫星导航系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;中文字库还是很大的，渲染也麻烦。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 02 Dec 2021 07:20:03 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-02:/2021/stdin-016</guid></item><item><title>Python 3.X ctypes 和 greenlet size changed 坑三则</title><link>https://blog.est.im/2021/stdout-021</link><description>&lt;h3&gt;安装 setup.py 的时候 &lt;code&gt;No module named '_ctypes'&lt;/code&gt; 报错&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;  Traceback (most recent call last):
    File &amp;quot;&amp;lt;string&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt;
    File &amp;quot;/usr/local/python3/lib/python3.9/site-packages/setuptools/__init__.py&amp;quot;, line 18, in &amp;lt;module&amp;gt;
      from setuptools.dist import Distribution
    File &amp;quot;/usr/local/python3/lib/python3.9/site-packages/setuptools/dist …&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 01 Dec 2021 17:41:32 +0000</pubDate><guid isPermaLink="false">tag:None,2021-12-01:/2021/stdout-021</guid></item><item><title>Edge调教指南——如何设置本地PAC代理和首页天气</title><link>https://blog.est.im/2021/stdout-020</link><description>&lt;p&gt;之前一直用的chrome v70，为什么呢？&lt;/p&gt;
&lt;p&gt;第一是这个老版本允许 &lt;code&gt;--proxy-pac-url="file:///Users/me/1.pac&lt;/code&gt; 这样设置，但是&lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=839566"&gt;Chromium项目的大爷们觉得&lt;/a&gt;你本地的.pac不够安全，要网上的.pac才安全，所以一刀切给禁了。当然有热心人士觉得这没啥大不了的。不外乎装个插件就可以切PAC。但是chrome插件其实会有一个fingerprint。Extension一启用，隔壁老王都知道你开代理了。&lt;/p&gt;
&lt;p&gt;第二，也是最重要的原因，这是最后一个chrome版本支持 &lt;code&gt;about://net-internals&lt;/code&gt; 在本地查看浏览器底层网络请求。现在无论是 Edge 还是 Chrome 都必须把 .json 文件从 https://netlog-viewer.appspot.com/ 加载才能看了。很尼玛保护了隐私有没有啊。&lt;/p&gt;
&lt;p&gt;但是坚持老版本，也付出了巨大的代价。很多新的 ES 语法不支持，比如说 Grafana 最新版 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 30 Nov 2021 11:32:33 +0000</pubDate><guid isPermaLink="false">tag:None,2021-11-30:/2021/stdout-020</guid></item><item><title>烧脑两题：蚂蚁和橡皮筋，30万公里的电路</title><link>https://blog.est.im/2021/stdin-015</link><description>&lt;p&gt;今天遇到的两道题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一只蚂蚁站在静止不动的一米长的橡皮筋的左边端点开始向右边爬，爬行速度是每秒一厘米。现在固定橡皮筋的左端点，拉伸橡皮筋使之以每秒一厘米的速度伸长，蚂蚁仍然是以之前的速度向右爬，试问蚂蚁能否爬到橡皮筋右端点？假设橡皮筋可以拉无限长，求蚂蚁是否能追上橡皮筋，追不上的话两者差多少？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解答没那么容易，见 zhihu 回答&lt;a href="https://www.zhihu.com/question/440130887"&gt;1&lt;/a&gt;, &lt;a href="https://www.zhihu.com/question/33093421"&gt;2&lt;/a&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;如果长一光秒，宽1米的长方形电路，忽略导线的电阻，那么打开开关后灯泡要多久才通电？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="" src="/images/2021/stdin-015-1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;答案来自&lt;a href="https://www.youtube.com/watch?v=bHIhgxav9LY"&gt;视频&lt;/a&gt;，主要讲了一通 坡印廷矢量 的道理。。。囧&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Mon, 22 Nov 2021 22:41:10 +0000</pubDate><guid isPermaLink="false">tag:None,2021-11-22:/2021/stdin-015</guid></item><item><title>TiDB不支持JSON字段默认值</title><link>https://blog.est.im/2021/stdout-019</link><description>&lt;p&gt;继前面的&lt;a href="/2021/stdout-011"&gt;日期不兼容&lt;/a&gt;坑，又发现&lt;a href="https://docs.pingcap.com/tidb/stable/data-type-default-values"&gt;一个&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The BLOB, TEXT, and JSON columns cannot be assigned a default value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然 &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/json.html"&gt;MySQL 5.7 也是这么说&lt;/a&gt;的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A JSON column cannot have a non-NULL default value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是 &lt;a href="https://dev.mysql.com/doc/refman/8.0/en/data-type-defaults.html"&gt;MySQL 8.0.13 就支持指定默认值&lt;/a&gt;了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Prior to MySQL 8.0.13, a JSON column cannot have …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Fri, 19 Nov 2021 09:14:28 +0000</pubDate><guid isPermaLink="false">tag:None,2021-11-19:/2021/stdout-019</guid></item><item><title>怕学生会看HTML源码里的答案，Chrome允许网管禁止查看特定网站源码</title><link>https://blog.est.im/2021/stdin-014</link><description>&lt;p&gt;看到一个&lt;a href="https://bugs.chromium.org/p/chromium/issues/detail?id=895462"&gt;奇葩issue&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With "view-source" in the URLBlacklist, the view-source:http://[URL] should not be available.  With Schools using Google Forms as a testing platform, students are able to use this shortcut to search through the source of the page, and determine the correct answers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后 Google Chrome 就真的改了。。。&lt;/p&gt;
&lt;p&gt;https://chromium-review …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 10 Nov 2021 13:35:30 +0000</pubDate><guid isPermaLink="false">tag:None,2021-11-10:/2021/stdin-014</guid></item><item><title>PCR testing site under the fireworks from Disney castle</title><link>https://blog.est.im/2021/stdin-013</link><description>&lt;p&gt;One of the most astonishing views from end of the year.&lt;/p&gt;
&lt;video src="/images/2021/stdin-013-1.mp4" controls preload="metadata"&gt;&lt;/video&gt;

&lt;p&gt;From the evening of &lt;a href="https://m.weibo.cn/detail/4698502573853047"&gt;31th Oct, Shanghai Disneyland&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Mon, 08 Nov 2021 22:28:06 +0000</pubDate><guid isPermaLink="false">tag:None,2021-11-08:/2021/stdin-013</guid></item><item><title>Chrome 指定域名解析，绕过 hosts</title><link>https://blog.est.im/2021/stdout-016</link><description>&lt;p&gt;看到 &lt;a href="https://www.v2ex.com/t/813626"&gt;V站有人问&lt;/a&gt;这个，随手一记&lt;/p&gt;
&lt;p&gt;可以参考&lt;a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/components/network_session_configurator/common/network_switch_list.h"&gt;源码里的注释文档&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;--host-resolver-rules=rules&lt;/h2&gt;
&lt;p&gt;Like &lt;code&gt;--host-rules&lt;/code&gt; but these rules only apply to the host resolver.&lt;br /&gt;
A comma-separated list of rules that control how hostnames are mapped.&lt;br /&gt;
For example:&lt;br /&gt;
- &lt;code&gt;MAP * 127.0.0.1&lt;/code&gt; Forces all hostnames to be mapped to &lt;code&gt;127.0.0.1&lt;/code&gt;&lt;br /&gt;
- &lt;code&gt;MAP *.google …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Sun, 07 Nov 2021 16:01:19 +0000</pubDate><guid isPermaLink="false">tag:None,2021-11-07:/2021/stdout-016</guid></item></channel></rss>