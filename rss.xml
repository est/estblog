<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>est の 输入 输出和出入</title><link>https://blog.est.im/</link><description>This blog is rated 🔞, viewer discretion is advised</description><lastBuildDate>Fri, 25 Apr 2025 23:49:00 +0800</lastBuildDate><item><title>Windows 自动设置开机锁屏壁纸 V3</title><link>https://blog.est.im/2025/stdout-03</link><description>&lt;p&gt;之前也写过，Windows下自动设置墙纸 &lt;a href="/202104/stdout-005"&gt;V1&lt;/a&gt;，&lt;a href="/2021/stdout-024"&gt;V2&lt;/a&gt;，今天发现两种方法都失效了。&lt;/p&gt;
&lt;p&gt;于是一气之下搞了个 Bing Image of the Day 版本的。&lt;/p&gt;
&lt;p&gt;保存为 change_wallpaper.bat 双击执行。加入自启动或者定时触发。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@if (@X)==(@Y) @end /* set Win10 wallpaper to Bing Image of The Day. By est.im
@echo off
cscript //Nologo //U //E:JScript %~n0.bat
exit /b %errorlevel%
*/

function http_get(url){
  var xhr = new ActiveXObject("MSXML2.XMLHTTP")
  xhr.open("GET", url, false)
  xhr.setRequestHeader("Accept-Encoding", "identity")
  xhr.send()
  return xhr
}

var rss_req = http_get('https://www.bing.com/HPImageArchive.aspx?format=rss&amp;amp;idx=0&amp;amp;n=1&amp;amp;mkt=en-US')
// WScript.Echo(rss_req.getAllResponseHeaders())
var img_url = 'https://www.bing.com' + rss_req.responseXML.selectSingleNode("//rss/channel/item/link").text
WScript.echo(img_url)
var fso = new ActiveXObject("Scripting.FileSystemObject")  // shit cant handle binary data
var stream = new ActiveXObject("ADODB.Stream")
var img_path = fso.GetSpecialFolder(2)+"\\bing_iotd.jpg"
WScript.echo(img_path)
stream.Open()
stream.Type = 1
var img_req = http_get(img_url)
stream.Write(img_req.responseBody)
stream.SaveToFile(img_path, 2)
stream.Close()

var WshShell = new ActiveXObject("WScript.Shell")  
WshShell.RegWrite("HKEY_CURRENT_USER\\Control Panel\\Desktop\\Wallpaper", img_path, "REG_SZ")
WshShell.Run("RUNDLL32.EXE user32.dll,UpdatePerUserSystemParameters")
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中 &lt;code&gt;format=rss&lt;/code&gt; 可以改成 &lt;code&gt;=js&lt;/code&gt; 或者 &lt;code&gt;=xml&lt;/code&gt; 本来想解析 json 但是发现老的 IE6 引擎不能支持双引号这种JSON，而且只能用 &lt;code&gt;eval()&lt;/code&gt; 就放弃了。还好有 xpath 还挺方便。&lt;/p&gt;
&lt;p&gt;要用 .bat 套一层是因为 win10 貌似禁止 &lt;code&gt;.js&lt;/code&gt; 或者 &lt;code&gt;.vbs&lt;/code&gt; 双击执行了。病毒木马太多了。套着一层还有点&lt;a href="(/cnblogs/600416)"&gt;技巧&lt;/a&gt;可以参考下。&lt;/p&gt;
&lt;p&gt;很久没写 .jscript 了用了 ChatGPT 这个 vibe coding 真爽。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Fri, 25 Apr 2025 23:49:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-04-25:/2025/stdout-03</guid><category>stdout</category></item><item><title>语言，逆差</title><link>https://blog.est.im/2025/stderr-03</link><description>&lt;p&gt;又睡不着，琢磨&lt;a href="https://x.com/yetone/status/1911679048347983988"&gt;一段话&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多戲超人 @DoubleFakeCute： 文字很容易传播仇恨，但很难传递感动。&lt;br /&gt;
@yetone：  是的，换句话说文字传播感动是需要功底的，但是传播仇恨不用上完九年义务教育就可以&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这句话背后揭示了一个道理：表达愤怒、抱怨、不满，似乎是语言最原始、最本能的用途。人类还未掌握完整的语法与修辞，就已学会了哭泣。&lt;/p&gt;
&lt;p&gt;新生婴儿落地的第一声啼哭，正是一种天赋的语言——一种对环境提出抗议的表达。哲学家维特根斯坦说过：“语言的边界就是世界的边界。”在生命伊始，我们的语言边界，即是对苦痛的感知；我们最早学会的，是如何说“我不喜欢”。&lt;/p&gt;
&lt;p&gt;相较之下，笑，是后天习得的，是在社会化过程中逐渐学会的回应。但当笑成为一种礼貌、成为一种职场的面具，它也就褪去了它的真实。于是我们在笑中疏离，在沉默中彼此冷漠，脸上浮现的，是长久训练出的 poker face，那张扑克脸仿佛是一种文明社会强加的伪装。&lt;/p&gt;
&lt;p&gt;最近 realDonaldTrump 把🇨🇳进口关税从10%，20%，54%，104% 一路干到154%。 仿佛数字本身也在喊叫。一个长期生活在中国的美国人 &lt;a href="https://www.bilibili.com/video/BV1LCdRYtE57/"&gt;王渊源John&lt;/a&gt; 打趣地说 trump 的支持者之所以对“涨关税”拍手叫好，是因为“trade deficit”（贸易逆差）这个词在英语里带有天然的负面含义——“deficit”意味着赤字、亏空，仿佛国家正在负债累累。而在中文语境中，“逆差”这个词更像是一种经济现象，而非道德沦丧，无需过度反应。&lt;/p&gt;
&lt;p&gt;这让我想起另一个语言误会的悲剧——美国的“war on drugs”（禁毒战争）之所以久攻不下，很大程度上，也可能是败在语言上。在英语中，“drug”一词含义，既可以指药品（medicine），也可以指毒品（narcotics）。这导致在大众语感中，毒品并没有一种“邪恶之物”的鲜明面孔。相比之下，中文中“毒品”与“药品”泾渭分明，一个是治病，一个是害命，“吸毒”这个词本身就带着罪与恶的意味。而英文中的“drug overdose”，只不过是一场“药物使用过度”的中性描述，仿佛只是剂量出了问题，而非价值观的崩塌。&lt;/p&gt;
&lt;p&gt;语言之毒，在于其无形；它不像刀剑那样可见、可防，而是悄无声息地改变我们的感知。孔子曾说：“巧言令色，鲜矣仁。”。庄子又言：“言者所以在意，得意而忘言。”。语言虽巧，往往意在蛊惑；修辞的闪光点，也可能是陷阱的倒影。语言的本质是媒介，而非终点。&lt;/p&gt;
&lt;p&gt;古代巫师、祭司、先知，其实都是语言的炼金术士。他们并非真正能预见未来，而是能以一字一句为符咒，将人的心智引向他们想要的方向。如《盗梦空间》中，那个悠悠旋转的陀螺，不断将人困于梦与醒之间，真假难辨。&lt;/p&gt;
&lt;p&gt;语言即现实的建构者，它能唤醒你，也能奴役你。它是文明的基石，也是误解的温床。传播仇恨，只需几句粗陋的标语；而传递感动，却如雕刻光影，需要时间、技艺与赤诚。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;15:12 根据ChatGPT润色了文章。太他妈吊了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 15 Apr 2025 05:54:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-04-15:/2025/stderr-03</guid><category>stderr</category></item><item><title>Su7🔥，智驾，假风口</title><link>https://blog.est.im/2025/stderr-02</link><description>&lt;h3&gt;车祸和智驾&lt;/h3&gt;
&lt;p&gt;北国春深，乍暖还寒。3月29日夜，三位大四女学生开着小米Su7新能源轿车，在安徽高速上着火出事，不幸香消玉殒。&lt;/p&gt;
&lt;p&gt;恰好米车上市刚一年，卖得十分火爆。因为新能源起火+死人，31日，1日舆论爆炸。作为全程吃瓜群众，觉得有必要写一些我的感知。&lt;/p&gt;
&lt;p&gt;还记得，首先乱七八糟群里看到各种截图和聊录，抖音哭惨。有家属（事后被证实是女主男友）痛陈了米车 刹车，“自”燃，车机死机，智驾，AEB等诸多技术问题，以及封号删帖等不公正掩盖行为。&lt;/p&gt;
&lt;p&gt;随着消息丰富和媒体报道，事实的大概的轮廓逐渐清晰：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;车是Su7标准版，电池应该是弗迪，女主家里出资买的&lt;/li&gt;
&lt;li&gt;车主归女主男友所有，因女主还未毕业，拿不到车贷&lt;/li&gt;
&lt;li&gt;女主和两位同学去外地考试，给女主母亲说的坐高铁&lt;/li&gt;
&lt;li&gt;女主“借车”出行，夜里出车祸，起火燃烧，前排两人遇难，后排被破窗拉出，遭遇不测。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本能的带入思考一下，车烧人陨，算是大事了。如果是旧能源车，起火怪车子质量，撞车怪驾驶。但是着是新能源，就得更加细分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;起火原因，普遍观念，重点看用的什么电池。三元锂肯定不如铁锂。但是出事的恰好是标准版，多半是铁锂。我觉得，PACK设计，是否CTB和电芯倒置也很重要。&lt;/li&gt;
&lt;li&gt;司机用了智驾，小米的公告说提前2秒退出，都不用猜肯定是这个结果&lt;/li&gt;
&lt;li&gt;因为事故当时高速在修路，有各种桩桶水马，那么有没有超速，避险，甚至路政设施不到位的问题？&lt;/li&gt;
&lt;li&gt;最后才轮到司机自身问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;截止现在 20250402 00:04，矛头普遍指向米车智驾NOA太烂。各种短视频、自媒体、矩阵号扮演不懂就问，把民意引导扩大到米车质量问题，营销问题，雷军人品问题了。&lt;/p&gt;
&lt;p&gt;我想说：啊？智驾难道还有不烂的？&lt;/p&gt;
&lt;p&gt;作为十多年驾龄的老司机，如果我在高速遇到事，比如爆胎，首相想的就是怎么从路政拿到赔偿，而不是怀疑轮胎或者车辆本身有啥猫腻；回到前面，发现一个重大差别：车是借的。民间有说法，车和女人不外借。出事的车上还有其他两位女性，如果有赔偿问题，车主肯定首当其冲。车主不会选择漫长的从路政那里维权，找最快引爆流量的方向——从车企入手。&lt;/p&gt;
&lt;p&gt;于是问题的矛盾集中在智驾爆发了。&lt;/p&gt;
&lt;p&gt;智驾这个关乎生命安危的议题。我对它的接受设定为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可以不用，但是最好有&lt;/li&gt;
&lt;li&gt;如果某一次生效，把车从事故边缘拉回来一次，就算值了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但显然大众对智驾有更高的看法和期待，幻想能完全保驾护航。&lt;/p&gt;
&lt;p&gt;设想一下女性单独出远门长途，夜里开车，加上出事的现场在打围修路，需要变道往对向车道，开着100+的NOA超速，稍有不慎处置不当，这不妥妥大事故。夜里过往车辆少。错过宝贵的救援窗口时间。你最好祈祷智驾在这期间要么工作0次，驾驶员直接接管，要么成功100%，&lt;/p&gt;
&lt;p&gt;三条人命就这样消失了。&lt;/p&gt;
&lt;hr /&gt;
&lt;h3&gt;说说小米&lt;/h3&gt;
&lt;p&gt;我当年一直给各种Samsung刷机MIUI。当smzdm说MIUI做手机了，果断冲了首发，然而米1手机有个电池虚焊的致命硬伤，变路人；抢红米抢不到，感觉被猴耍，变米黑；突然有一天，雷总说给1999返现，我又转粉了。我平时喜欢看一些汽车类资讯，也感叹米车的成功。雷军的爆款思维很是有一套。&lt;/p&gt;
&lt;p&gt;面对车祸带来的口水👊，斗胆对万亿总裁指点一下江山：现阶段智驾是个假风口。&lt;/p&gt;
&lt;p&gt;雷军很喜欢讲顺势而为，风口的猪也能起飞，记得一次采访他说之所以造车是因为小米集团里的人才都跑去做车机，做智驾了。然后🇺🇸一制裁duang你手机芯片成问题了。拿干脆下场做车得了。新能源技术卖点，除了三电还能有啥，就是智驾。&lt;/p&gt;
&lt;p&gt;我看待智驾的出发点：它永远无法达成L4 L5的目标。更不要说纯视觉方案了！理由很简单，就算你训练AI做得和人一样聪明，最顶尖的人类驾驶员开车也会犯错，AI有何根本机制避免？既然AI无法避免，车企担责就是不可避免的。&lt;/p&gt;
&lt;p&gt;顺着这个出发点，那么现阶段最好的智驾供应商，天生有一道护身符。如果它出了事，可以拿“市面上你也找不到更好的智驾”给圆过去。比如鸿蒙M7出事，KOL可以大大方方造谣说是博世方案的锅，虽然舆论也很难看，但是华为方案这个核心并未受到挑战。因为它就是无可争议的No.1&lt;/p&gt;
&lt;p&gt;但是老二和老三就难受了。消费者愿意为了最好的东西支付溢价。这场比赛可没有“顺势”。所有擂台上甘拜下风的竞争者，遇到逆风局，都只能被动挨打。这是个赢家通吃的游戏。&lt;/p&gt;
&lt;p&gt;今天小米公告，雷军的发言，给人的感觉就是只想平息，并没有太好的针对措施。技不如人，还能咋办？等热度过去，继续x砸钱干研发呗&lt;/p&gt;
&lt;p&gt;这事还有更主动的出路。在前面已经列出关键——路政。&lt;/p&gt;
&lt;p&gt;家属和民意选择往车企身上靠贴，你车企不知道往路政靠？毕竟未来的智慧交通，“车路协同”，V2X，也是很重要的一环。直接大大方方承认，智驾无法单独承担责任，遇到静态物品太迟。就算人开车，也不能很远发现前方路况出什么事了。过去出租车司机靠对讲机通风报信，现代人不也是要靠GPS+地图路况。高德那个山路弯道会车提醒就广获好评。同理，遇到道路施工或者险情，路政是不是应该能主动下发推送，提前切断区域内所有智驾，推送降速行驶指令呢？&lt;/p&gt;
&lt;p&gt;所谓“赛博桩桶” 是也。&lt;/p&gt;
&lt;p&gt;雷军作为人大代表，北京现金王，完全应该站出来，倡议这件事。跳出“智驾”这个死局，开辟新的路线。有些“势”就不能等别人造，得自己突破。&lt;/p&gt;
&lt;p&gt;技术上做这个事情太容易，电子路标，还有雷军倡议的智慧车牌。就拿现有的框架，ETC龙门架就可以下发一定的数据。新车也是强制配备ETC终端的，完全可以跟智驾通信。&lt;/p&gt;
&lt;p&gt;这样，以后如果路政没设置电子围栏，至少也分得大锅。&lt;/p&gt;
&lt;p&gt;路政不愿意接受，米车之间能不能组一个路况网呢？加上蔚小理搞个实时路况联盟行不行呢。单机蒙猜，不如群体智慧。这事就算没法立刻落地，至少也是个话题讨论点，怎么也能熬过这次危机。&lt;/p&gt;
&lt;p&gt;安全开车这事，没必要指望那点可怜的CMOS像素和矩阵乘法来承担一切&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 01 Apr 2025 23:48:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-04-01:/2025/stderr-02</guid><category>stderr</category></item><item><title>早高峰路上的碎碎念</title><link>https://blog.est.im/2025/stderr-01</link><description>&lt;p&gt;周一早上，刚刚在人形匆匆里送完孩子到校，回头又开车出门。通勤路上，这段时间一直在琢磨孩子的事，比如这将来升学就业压力。因为被网上出生人数年份图片给弄焦虑了，活在生育高峰的不幸，从就面临更大的竞争压力。&lt;/p&gt;
&lt;p&gt;早高峰堵车是最影响人一天心情的，我习惯见缝插针搓方向盘。突然思维有些碰撞。你说这车道，是不是就很像人生？&lt;/p&gt;
&lt;p&gt;如果车流量小，你敞开跑，那就看自己能力有多快。&lt;/p&gt;
&lt;p&gt;如果车多呢？能不能到达你的目标，就不是你自己说算了。得考虑peer pressure，和你选择的车道。&lt;/p&gt;
&lt;p&gt;城市多车道道路上，有小客车道和大车道之分，理论上左侧车道速度最快。实际呢？最右侧最快！至少在我的城市里是这样。真正的老司机会不惧进出口，去挑战复杂性，往往最右侧车速比最左侧快。大车因为起步刹车比较费劲，会选择右2车道。&lt;/p&gt;
&lt;p&gt;你在社会阶层里，感去挑战最底层吗？想起来一句话“农村包围城市”，“得屌丝者得天下”。真是富贵险中求啊。&lt;/p&gt;
&lt;p&gt;当然，以上的情况是开放式道路，比如城市环线。如果是封闭式道路，比如高速呢？&lt;/p&gt;
&lt;p&gt;恰好我每天通勤就要经过一段连续高速。作为一个一般都是我超别人，别人很少超我的坏习惯司机，我分析了一下我路怒症的根源，那就是频繁变道。&lt;/p&gt;
&lt;p&gt;频繁变道是一个投机行为。特别尴尬的是你费老鼻子变过去，发现更堵了，你之前的车道反而跑起来了。这个时候你有两个选择：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;回到之前的位车道，但是会掉几个位置，&lt;/li&gt;
&lt;li&gt;你头铁，既然我都换车道了，就干脆再等着，再看看有没有机会&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我的经验是，往往这个场景下，第二种选择会一落千丈，更糟糕。因为你初次判断的车道拥堵程度，一般都是从客观出发，最准确的，后面多半是冲动，主观的情绪主导了你的判断&lt;/p&gt;
&lt;p&gt;这该死的沉没成本！放不下面子的悲剧就在此。很多人辞职换赛道，也是一样的心态。好马不吃回头草，更多的人是选择继续再换另外一个车道。哈！虽然走回头路会显得很小丑，但是有的时候就是——唉，真香&lt;/p&gt;
&lt;p&gt;糟糕的情况，真正得到缓解，是时代的变迁，比如遇到高速出入口汇入汇出了。患得患失，人生大忌！&lt;/p&gt;
&lt;p&gt;疯狂超车，往往只是一个错觉。有的时候明明你超了很多车，但实际上你就只比别人早到一两分钟。总体差异不大。城市道路里，你付出的诸多努力，一个红绿灯就给你抹平。或者大直道你拉爆别人，但是遇到龟速车阵你也只能干瞪眼，别人也缓慢追上。人的努力固然重要&lt;/p&gt;
&lt;p&gt;一个社会的总进步空间是固定的，有可能局部胜利，多次胜利，但是总体胜率也不能改变你的排位。&lt;/p&gt;
&lt;p&gt;都在说阶级固化，我倒反而觉得，只要车子在缓慢走，那么大部分人不会太焦虑；如果车子完全不动，那么大家心态就很崩溃，感觉窗外路边一棵草都比人过得好。所谓的流动性，不是说你一定要超过多少人，而是说如果看到别的车道走的快，有机会能够跳过去。&lt;/p&gt;
&lt;p&gt;比堵车更痛苦的，是好死不死，前面刚好有个傻逼，空出很长很长一段距离，隔壁的车一辆接一辆插入，你却无可奈何，隔靴搔痒。就像你看别人都发财了，你却无计可施，急死了。现实世界，人和人对于有限岗位的竞争，所谓长幼功序排资论辈，莫过如此。&lt;/p&gt;
&lt;p&gt;但是从另一个角度想来，人多的时候机会也多。你的市场也更大，人少了，这个市场也会减少。&lt;/p&gt;
&lt;p&gt;孩子的培养和性格，跟车子一样。在长期竞争里是多维度的。比如谁牵引力大，起步快，谁就能很快的抓住一些短期的利益。但是长途路上是否开着舒服，它需要看底盘的平衡和座椅的舒适。遇到车少的蓝海，这个时候就看你爆发的巅峰技能，谁极速高谁能更快到达终点。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Mon, 24 Mar 2025 09:40:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-03-24:/2025/stderr-01</guid><category>stderr</category></item><item><title>正则获得国际电话前缀</title><link>https://blog.est.im/2025/stdout-02</link><description>&lt;p&gt;&lt;a href="https://blog.est.im/post/48751778838"&gt;2013年&lt;/a&gt;的时候喷过ITU这个国际电话号码，前缀是变长的问题&lt;/p&gt;
&lt;p&gt;今天遇到问题，需要按国际区号初步分析归属地和供应商，&lt;a href="https://stackoverflow.com/questions/2113908/"&gt;stackoverflow&lt;/a&gt;和AI给的都很渣，写了个正则：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;re.compile(r"""\+
    (1  # north america
    |(?:  # 3 digits
        21|22|23|24|25|26|29|35|37|38|42|
        50|59|67|68|69|80|85|87|88|96|97|99)\d
    |[2-9]\d)  # two digits
""", re.VERBOSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;+1&lt;/code&gt; 开头的是北美，然后依次寻找3位的，再匹配2位的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;+7&lt;/code&gt; 本来是苏联的，现在给 哈萨克斯坦 和 俄罗斯 了，就当成两位的判定吧。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 25 Feb 2025 11:38:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-02-25:/2025/stdout-02</guid><category>stdout</category></item><item><title>面向老外最容易理解的“春节”定义，以及其它</title><link>https://blog.est.im/2025/stdout-01</link><description>&lt;h3&gt;用英语把 春节 讲明白&lt;/h3&gt;
&lt;p&gt;最近小红书 #tiktokrefugee 以及所谓的“中美对账”很火，然后又吵到 Chinese new year, 和 lunar new year 怎么叫，案例说闲来无事，我想搞明白究竟春节是怎么定的？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最接近立春之朔日（月缺之日）为正月初一&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;依赖历法，那么接着查&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;冬至所在之朔望月为十一月&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这又是太阳历又是月亮历的，还有二十四节气。要把“春节”这玩意脱离汉文化的基础背景定义下来，很麻烦。在翻二十四节气的时候，灵机一动，因为二十四节气是太阳历，和公历几乎严丝合缝，公历又和星座能对应的上。那么春节其实可以最大程度的简化定义为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;水瓶座的新月夜。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;新月就是看不到一丁点月亮，和满月相对。&lt;/p&gt;
&lt;h3&gt;AI 能理解 春节 吗&lt;/h3&gt;
&lt;p&gt;为了验证我这个说法，我问了ChatGPT：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What's the new moon day of 2025 Aquarius zodiac sign?&lt;br /&gt;
The new moon in Aquarius for 2025 will occur on January 29, 2025.&lt;br /&gt;
What's the new moon day of 2024 Aquarius zodiac sign &lt;br /&gt;
The New Moon in Aquarius in 2024 will occur on February 9, 2024&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2024年差了一天怎么回事？新月 (new moon) 作为天文现象是发生在一个确定时间的。但是对应到世界各地，当地时区的原因，可能差1天。所以我感觉这个说法是 close enough 了。&lt;/p&gt;
&lt;p&gt;国产AI Deepseek 思考的也不错：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What's the new moon day of 2025 Aquarius zodiac sign?&lt;br /&gt;
the new moon day for the Aquarius zodiac sign in 2025 is January 29, 2025.&lt;br /&gt;
how about 2024&lt;br /&gt;
the new moon day for the Aquarius zodiac sign in 2024 is February 9, 2024&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我想看下 R1 推理能力，于是问了一嘴：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;what's the special holiday of this day?&lt;br /&gt;
For January 29, 2025, the new moon day in Aquarius, there are no major globally recognized holidays&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看来傻了。我换了下 ChatGPT&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;any holiday on that day?&lt;br /&gt;
Yes! January 29, 2025, falls on Lunar New Year’s Eve, which is the day before the Chinese New Year (Year of the Snake).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;R1 对自己上下文可能不太重视。&lt;/p&gt;
&lt;h3&gt;春节 怎么翻译&lt;/h3&gt;
&lt;p&gt;这个问题想完，回到一开始的问题，有人说 CNY 和 LNY 都不好，不如直接叫 Spring Festival 。我觉得，很有道理。毕竟英语对所有外来词都是音译。&lt;a href="https://www.zhihu.com/question/11047706645/answer/96973692909"&gt;比如&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;春卷，英语一般称为 Spring Roll，而不是 Chinese Burrito&lt;/li&gt;
&lt;li&gt;馒头，英语一般称为 Mantou或者 Steamed Bun。而不是 Chinese Bread&lt;/li&gt;
&lt;li&gt;云吞，英语一般称为 Won Ton。而不是「Chinese Ravioli&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是进一步想，英语为啥就能接受 burrito、ravioli 这样的外来词汇，不如干脆直接叫 Chunjie ？&lt;/p&gt;
&lt;p&gt;其实，全世界的主要语言里，只有汉语还在坚持“意译”。别的语言早弃疗了，直接音译或者 transliteration。原因很简单，全世界主要语言里，只有“中文”是非 alphabet 体系。其它的文字都是表音的。只要发音一样，就是同一件事物，按不同的字母表书写而已。&lt;/p&gt;
&lt;p&gt;如果按照这个思路，全世界的拼音语言，不出意外，都会趋势都会被英语统一，成为 Lingua franca。这也是我前一篇blog说为啥&lt;a href="https://blog.est.im/2025/stdin-02"&gt;要学习英语&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;除了一个例外——中文。主要语言里，只有中文还在孜孜不倦的把一切外来和新鲜事物，用古老的文字重新描述 “reinterpret” 一番。久远一点的，国外叫 twitter，国内非得叫 sina microblog, sohu microblog, tencent microblog，近一点的，全世界都叫 AI，LLM这样的缩写，就国内坚持叫 “人工智能”，“大模型”。 大模型还省略“语言”两个字&lt;/p&gt;
&lt;h3&gt;homeless 和房产税&lt;/h3&gt;
&lt;p&gt;又想起这段时间 “中美对账”引发的第二个问题。老美很多 homeless，所以有讨论国内为啥没流浪汉。很多人说是因为城管，户籍制度。因为社会主义有一个操作叫“遣返原籍”，无论你去哪个城市流浪，总能根据身份证地址把你搞回老家。&lt;/p&gt;
&lt;p&gt;既然有老“家”，其实按字面意思，不能算 home-less 了。只能说当地无房而已。&lt;/p&gt;
&lt;p&gt;由此想到一个问题，房产税和户籍制度是矛盾的。老美因为没有 property  所以变 homeless 所以没有 bill address 所以无法申请社保和银行卡，无法参与社会生产从而只能乞讨。如果国内也开始搞 property tax，那么首先的技术问题就是在哪个环节征收？&lt;/p&gt;
&lt;p&gt;最大的可能性就是交易环节。那么大不了不卖了，就出租，子子孙孙传一辈子。退一步说，你欠房产税，行政部门会把你房子拍卖吗？如果你觉得会，那么问题来了，和欧美最大的不同，请问你没房之后，户籍地址写哪里？&lt;/p&gt;
&lt;p&gt;有人说，上集体户啊。集体户其实从设计上来说，必须得有“单位”挂靠的。就算最近几年搞出来所谓“人才落户”，这也建立在你在当地有一定就业能力，有潜在的“雇主”背书的。你都交不起房产税了，哪个人才中心敢接收你的户口啊？接收户口，意味着以后所有关于这个“人”的麻烦都归属地管理。&lt;/p&gt;
&lt;p&gt;按照这个推演，房产税只有三个结果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不实施；或者实施了不怎么收（参考重庆上海）&lt;/li&gt;
&lt;li&gt;实施+欠费没收，动摇户籍制度&lt;/li&gt;
&lt;li&gt;只针对多套房产实施，那么必然会带来大量的技术性离婚。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;中美最卷&lt;/h3&gt;
&lt;p&gt;和朋友聊中美话题，说现在贸易战产业转移，印度和东南亚有没有可能崛起。我说了几个反驳的理由：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;东南亚是产业“回流”，不是转移。别人70年代红红火火的，是广东抢走了饭碗。现在是吐出去&lt;/li&gt;
&lt;li&gt;东南亚基本上都是“发达国家”。我觉得 "developed" 在英语里，压根不是“发达”的意思，而是 过去时，表示 发展到头了，没进步空间了，天花板了。去过几次东南亚旅游发现当地20年、30年前怎么样，现在还是那样。&lt;/li&gt;
&lt;li&gt;一个国家能否崛起，从草根视角，就是看喜欢打拼的人，有没有出头之日？有的话，这个国家就会超过中美，如果没有，中美就会收割。。。印度和东南亚里，有这样的制度和文化的吗？在国内，这样的制度和文化其实不是好事，而是一种压迫。&lt;/li&gt;
&lt;li&gt;全世界只有华人和老美最卷。前几天听到一个老美vlogger说了个事让我震惊，她说老美觉得休假是“可耻”的。之前也有耳闻，老美吃午饭特别怕耽误老板时间，也不敢午休。Hacker News上一些欧洲人也经常评论说老美的 work culture 是非常 toxic 的，太拼了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;全世界只有老中和老美最拼，这个说法，是我从一个拿了中国绿卡的美国演员 曹操 那里听到的&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.bilibili.com/video/BV1xe4y1o7wg/"&gt;https://www.bilibili.com/video/BV1xe4y1o7wg/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;他的理论是，全世界绝大部分的人，都是挣钱能凑合过日子就行了。work to live。那种不要命挣钱，live to work的文化只有儒家有。美国出发点不一样，全世界那种少数天生喜欢拼命挣钱的人，都受不了当地懒散和松弛，润美去干大事挣大钱了。&lt;/p&gt;
&lt;p&gt;言之有理啊。以前欧洲那种日子过不下去敢去一个陌生的未知的新大陆打拼的，都不是等闲之辈。所以一代传一代搞出来这么一个打拼的文化。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;今日份的胡思乱想就到这了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 12 Feb 2025 16:06:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-02-12:/2025/stdout-01</guid><category>stdout</category></item><item><title>纸吸管“环保”的说法是一个4年级小学生发明的</title><link>https://blog.est.im/2025/stdin-03</link><description>&lt;p&gt;之前看到elon吹捧川普取消纸吸管是&lt;a href="https://x.com/elonmusk/status/1887886625318818292"&gt;最伟大总统&lt;/a&gt;，一大早看到&lt;a href="https://x.com/paulg/status/1888203276811632935"&gt;pg转的&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a curious fourth grader who had just started an environmental project to discourage restaurants from providing straws by default, Cress decided to look online to find out how many straws are used each day in the United States. Not being able to find any statistics, he called straw manufacturers directly and estimated the 500 million figure based on numbers they provided him.&lt;/p&gt;
&lt;p&gt;In February of 2011, Milo Cress (then nine years old) founded the Be Straw Free Campaign project to work together with members of the straw industry, restaurants and other businesses, schools, environmental groups, and concerned citizens to reduce the use and waste of disposable plastic straws.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个是&lt;a href="https://www.npr.org/2018/07/22/631254978/one-childs-outsized-influence-on-the-debate-over-plastic-waste"&gt;npr报道的&lt;/a&gt;，还是比较权威的。很多饮料是塑料杯子，然后吸管给你搞成纸质；或者纸质吸管外面用塑料包一层。只能说欧美搞这些也挺草台班子的。想起之前那个how dare you小学生，感觉是这个风气。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Sun, 09 Feb 2025 10:51:00 +0800</pubDate><guid isPermaLink="false">tag:None,2025-02-09:/2025/stdin-03</guid><category>stdin</category></item><item><title>为什么要学习英语</title><link>https://blog.est.im/2025/stdin-02</link><description>&lt;p&gt;&lt;a href="https://news.ycombinator.com/item?id=42897120"&gt;HN上&lt;/a&gt;看到一个ISBN可视化项目：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://phiresky.github.io/blog/2025/visualizing-all-books-in-isbn-space/"&gt;https://phiresky.github.io/blog/2025/visualizing-all-books-in-isbn-space/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;截图：&lt;/p&gt;
&lt;p&gt;&lt;img referrerpolicy="no-referrer" src="https://pbs.twimg.com/media/GitSyFZa0AAr_HB?format=jpg&amp;name=large" /&gt;&lt;/p&gt;
&lt;p&gt;这，可能就是为啥要学习英语吧。第一排左1、左2，第二排右2是出版的英语书籍，右三是简中。人类的大部分知识还是英语写的。这优势还是太大了。&lt;/p&gt;
&lt;p&gt;这个可视化的&lt;a href="https://annas-archive.org/blog/all-isbns.html"&gt;发起者是 Anna’s Archive&lt;/a&gt;，优胜者获奖 $10,000，截止日期2025-01-31，旨在收集整理全人类有ISBN编号的书籍。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Sat, 01 Feb 2025 22:30:49 +0800</pubDate><guid isPermaLink="false">tag:None,2025-02-01:/2025/stdin-02</guid><category>stdin</category></item><item><title>从红宝书到小红书：woke的演变历史</title><link>https://blog.est.im/2025/stdin-01</link><description>&lt;p&gt;最近tiktok ban闹得沸沸扬扬，甚至有大批“洋难民”&lt;a href="https://new.reddit.com/r/tiktok/comments/1i0o9xn/"&gt;纷纷涌入小红书&lt;/a&gt; ，把 "RedNote" 冲上了appstore 排行榜第一名。&lt;/p&gt;
&lt;p&gt;无独有偶，&lt;a href="https://x.com/paulg/status/1878762411697840489"&gt;看到&lt;/a&gt; Paul Graham 一篇大作 《&lt;a href="https://paulgraham.com/woke.html"&gt;The Origins of Wokeness&lt;/a&gt;》，不愧是YC创始人，文笔流程优雅。开头就暴击。所谓 woke ，在维多利亚时代就是基督教义，在苏俄就是马列教义，woke 的本质是“社会公正”，老一的英语称为 prig。每个社会都有部份 prigs 人群，但是woke大行其道，pg分析，当前属于“第三次冲击”。第二波在80s年代政治正确达到顶峰90s消停。&lt;/p&gt;
&lt;p&gt;那么第一波呢？第一波其实就是60s左翼学生运动。我晕，这不正是伯克利举着红宝书嗑LSD唱摇滚的年代么。pg说当年是教授纵容学生追求“新思潮”，但是学生一穷二白闹了也就完了。80s是pg自己上大学的时期，60s的大学生刚好进入教职岗位，开始引导自己的学生继续搞 political correctness，也就是举报性骚扰，要求男女平权这些；新世纪以来，特别是2020s，这些当年的左翼青年主导院长和校长等关键岗位了，所以闹得更欢了，从学界蔓延到媒体，到政界，到一发不可收拾。&lt;/p&gt;
&lt;p&gt;搞 PC 最大的用处不在平权，而在于 faculty members encouraging students to attack other faculty members，作者说和 Mao 一毛一样 哈哈哈哈笑死。青年本来就愤，拿事搞人这就是天性啊。所以在第三波浪潮里就是各种 cancel culture。到后面的 BLM, metoo 等愈演愈烈。&lt;/p&gt;
&lt;p&gt;最后作者提出了什么解决方案呢？他说 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm not a Christian, but I can see that many Christian principles are good ones&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我表示？只能说尊重但是不认同吧。看完这篇巨作最大的感受就是，墙内各种对平权热嘲冷讽，美国老美的平权运动居然起源60年代左翼运动。这他妈倒反天罡了等于是。&lt;/p&gt;
&lt;p&gt;想起最近小红书刷出巨多洋人，不知道是推荐算法sb了，监管不到位洋信息“倒灌”了，还是都是抠脚大汉的矩阵号发力了，但是我对“赛博移民”有一个简单的理解，yt，ig 这些洋平台对 tiktok 难民来说就是“建制派”，不 hip，况且头部的power user已经铁板一块没法突破了；Twitter更烂因为Musk是烂中烂。老中的“第三方”平台，无论是 tiktok 还是 Rednote 都是一种无可奈何的逃避。捧起小红书的这帮洋人，恰如他们爷爷奶奶辈在60年代面对当地当局各种问题，捧起红宝书一样，是一种寄托。这下中西合流，家人们谁懂啊洋人虾头男，一个买断X一个入主白宫了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 14 Jan 2025 23:36:23 +0800</pubDate><guid isPermaLink="false">tag:None,2025-01-14:/2025/stdin-01</guid><category>stdin</category></item><item><title>Little known facts about Han</title><link>https://blog.est.im/2024/stdout-06</link><description>&lt;p&gt;I was planning to publish this article on 2024-04-05 00:01, but rejected because it looked silly for this blog. On that day, butt hurt as usual, I watched this short-vid called &lt;a href="https://www.douyin.com/video/7345777842376019252"&gt;Why Sichuan people were chill&lt;/a&gt;, by the influencer 罗胖. I was quite amazed by his 3.79M many fans and more strangely, IP location: Sichuan. I followed the article he mentioned: &lt;a href="https://www.dedao.cn/course/article?id=rykaNlMY5gn3Jq19QdJ7EAROW0DLje"&gt;1001 A.D. and How Sichuan got its name?&lt;/a&gt; and find it quite interesting, as all history lessons are.&lt;/p&gt;
&lt;p&gt;So let's explore the little known details and find out why history of Sichuan is somewhat special (Whig-style narrative alert!)&lt;/p&gt;
&lt;h2&gt;The birthplace of Taoism&lt;/h2&gt;
&lt;p&gt;Records shows that the birthplace of Taoism, the most chill religion ever, points to 鹤鸣山 at 大邑, and the 青城山 nearby was considered a holy mountain. Some say 龙虎山 at 江西 as an alternative, but in my opinion its where the &lt;em&gt;tianshi&lt;/em&gt; (prophet) 张道陵 pactice his alchemy rather than the developing the belief，The real deal including Wudoumi movement clearly originates from 龙门 mountain ranges on the western of Chengdu plain.&lt;/p&gt;
&lt;h2&gt;Inspired by Buddhism&lt;/h2&gt;
&lt;p&gt;When I was searching for tourist attactions I found that 鹤鸣山 were suspiciously connected to Buddhism. Chinese Buddhism were first landed at 白马寺 at then capital 洛阳 at 68 B.C. But 白马寺 itself wasn't supposed to be a &lt;em&gt;temple&lt;/em&gt; per se, but rather a settlement sponsored by the imperial court. There were nine houses of governance established by Han court covering Justice, Sacrifices, Royal affairs, Carriages and so on, one of them is 鸿胪寺 for Royal Hospitality. The 白马寺 was built by the order of the Second Emperor of E. Han as a guest house to translate the &lt;em&gt;42 chapters of Sutra&lt;/em&gt; acting like a 鸿胪寺. Some 6 years later, after the job were done, the two buddhist monks, 迦什摩腾 and 竺法兰, went to Sichuan seeking a legendary mountain called 雾中山 according a prophecy. The prophecy were carved on a Ming-era stele 开化寺碑记, describes the Buddha Shakyamuni, when about to enter Nirvana in the city of Kushinagar, once said to his disciple Sariputta:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“我灭去七百年，尔往震旦雾中大光明山。山脉发源于昆仑，有七十二峰，为古佛弥陀道化之所。严密保护，嗣后圣者来居。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So the two Indian monks built a real Buddhism temple 开化寺 on 雾中山 and began spreading the religion there. It's said the temple had a collection of Pāli Canon transcribing Theravada Buddhism, one of the O.G. version of two Buddhism major branches in Asia.&lt;/p&gt;
&lt;p&gt;So what's the connection anyway? The first prophet of Taoism, &lt;em&gt;tianshi&lt;/em&gt; Zhang, chose 鹤鸣山 somewhere 10km near the first Buddhism temple&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/images/2024/stdout-06-01.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;And later Taoism flourished in Sichuan, like Wudoumi, and ultimately, its variant Taiping-Tao, wrecked the mighty Han empire.&lt;/p&gt;
&lt;p&gt;I also commented this travia &lt;a href="https://news.ycombinator.com/item?id=42254106"&gt;on HN&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The doctrine of religious Taoism and Buddhism were strikingly similar, which leds to series of conflicts and accusations over the millennia. The most famous example, &lt;em&gt;Laozi Converted the Barbarians 老子化胡经&lt;/em&gt; were publicly debated in Mongol-era imperial court and Taoist lost the battle.&lt;/p&gt;
&lt;h2&gt;Silk&lt;/h2&gt;
&lt;p&gt;Also an interesting article from HN &lt;a href="https://news.ycombinator.com/item?id=42297733#42305823"&gt;Evidence of the use of silk by Bronze Age civilization&lt;/a&gt;, which I also commented, because some guy suggests Sichuan were once non-Han, it triggered me. TFA states (with my edits): &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HuangDi lived on the hill of Xuanyuan and married the daughter of Xiling clan. HuangDi's consort Leizu of Xiling taught others to raise silkworms, and the legend Leizu is from the people of Chengdu in Sichuan. &lt;em&gt;Shu&lt;/em&gt; refers to “mulberry worms” aka “silkworm larvae”. The character &lt;em&gt;Shu&lt;/em&gt; is related to the initial sericulture, referring to the beginning of the Shu State and the people, for whom sericulture was central to their economic activities.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;HuangDi&lt;/h2&gt;
&lt;p&gt;For those who aren't familiar, &lt;em&gt;HuangDi&lt;/em&gt; the Yellow Emperor was considered the ancester of the Han, the Hun, the Hmong and Xianbei of the Siberians. The second son of &lt;em&gt;HuangDi&lt;/em&gt;, married ChangPu from the Shu clan. Their son &lt;em&gt;zhuānxū&lt;/em&gt; was another &lt;em&gt;Di&lt;/em&gt;, out of the &lt;em&gt;5 Di of Ancient Kings 五帝&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Baijiu&lt;/h2&gt;
&lt;p&gt;Baijiu, the Kaoliang liquor, strong distilled from great millet, were first introduced in Sichuan known as 蜀黍. Even today top notch brands like &lt;em&gt;Maotai&lt;/em&gt; were from  the Chishui Valley of Sichuan (administratively divided to Guizhou by purpose)&lt;/p&gt;
&lt;h2&gt;Han&lt;/h2&gt;
&lt;p&gt;But what does &lt;em&gt;Han&lt;/em&gt; has anything to do with Sichuan? Well everything does. The literal meaning of "Han" traces back to LiuBang, the Great King of Han, founder and first ruler of the Han dynasty, literally settled his fief over Sichuan (Ba, Shu, Hanzhong and its 41 counties). Liubang spent his next 5 years elimilated all his enemies and began the first Pax Sinica of 300 years.&lt;/p&gt;
&lt;p&gt;The second Pax Sinica, led by the Great Worrier Li Shimin, also titled &lt;em&gt;Yizhou Acting Desk of the Supreme Book&lt;/em&gt;. To explain, &lt;em&gt;the Supreme Book&lt;/em&gt; refers to 尚书, the source of great power, the source of ultimate authority, one and only text that describes how Chinese civilization came into being since ancient times. The Desk is the government body where the book operates, Yizhou Acting Desk is like the copy that covers Sichuan, aliased Sichuan. The soldiers of Sichuan, as the last reserve force led by general 窦轨, joined Li Shimin for the final attack on Dou JianDe on 620 A.D. at the Hulao Pass, which leds to the live capture of two kings, and helped Li Shimin rose to throne.&lt;/p&gt;
&lt;h2&gt;8 Partners of Oath&lt;/h2&gt;
&lt;p&gt;The fighting spirit of Sichuan soldiers dates back. An oath was taken between Zhou and 8 partner states, including Shu, as described in &lt;em&gt;the Supreme Book&lt;/em&gt; on Zhou chapter 4, to rebel against the cruel Shang dynasty. The battle took place at 牧野 on 1046 B.C. where the Ba people performed a war dance on the frontline and Shang army collapsed upon witness.&lt;/p&gt;
&lt;h2&gt;Libai and the Great Prose Masters&lt;/h2&gt;
&lt;p&gt;Libai, the God of Poetry, was raised in Sichuan, but where he's born is debatable. However, four out of the Eight Great Prose Masters, were born in Sichuan. So it's either Libai a Sichuanese or Ouyang Xiu, or both.&lt;/p&gt;
&lt;h2&gt;... and there's more&lt;/h2&gt;
&lt;p&gt;That's all of the trivia I could think of, for now! Leave a comment if you think otherwise. Feel free to correct my English mistakes please, as I am an ESL blogger without use of any AI&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Tue, 03 Dec 2024 22:26:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-12-03:/2024/stdout-06</guid><category>stdout</category></item><item><title>ss命令抓linux下偶发端口访问</title><link>https://blog.est.im/2024/stdout-24</link><description>&lt;p&gt;Linux服务器一直有个TCP连上来发数据，跑到对应的机器上发现连接已经断了，对应的进程也退出了。估计是某种定时任务。&lt;/p&gt;
&lt;p&gt;排查代码无果，只能通过命令行来监控。这里直接上&lt;code&gt;ss&lt;/code&gt;命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  while true; do pid=$(ss -tanpe state established 'dst 10.11.22.33:4455'  | awk 'match($0,/pid=([0-9]+)/,a){print a[1]}'); [[ -n $pid ]] &amp;amp;&amp;amp; tr '\0' ' ' &amp;lt;/proc/$pid/cmdline ; sleep 0.2; done;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;解释下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;while true; do ...; sleep 0.2; done;&lt;/code&gt;每0.2s反复刷新执行指定命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ss -tanpe state established 'dst 10.11.22.33:4455'&lt;/code&gt;&lt;br /&gt;
 - &lt;code&gt;-t&lt;/code&gt; 选项表示显示 TCP 连接。&lt;br /&gt;
 - &lt;code&gt;-a&lt;/code&gt; 显示所有连接。&lt;br /&gt;
 - &lt;code&gt;-n&lt;/code&gt; 不解析主机名、端口。&lt;br /&gt;
 - &lt;code&gt;-p&lt;/code&gt; 显示进程信息。&lt;br /&gt;
 - &lt;code&gt;-e&lt;/code&gt; 显示额外的详细信息。&lt;br /&gt;
 - &lt;code&gt;state established&lt;/code&gt; TCP已连接&lt;br /&gt;
 - &lt;code&gt;dst 10.11.22.33:4455&lt;/code&gt; 过滤TCP目标地址+端口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;awk 'match($0,/pid=([0-9]+)/,a){print a[1]}'&lt;/code&gt; 提取出 pid&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[ -n $pid ]] &amp;amp;&amp;amp; tr '\0' ' ' &amp;lt;/proc/$pid/cmdline&lt;/code&gt;  从procfs读取该进程启动时的命令和参数。且把空字符 &lt;code&gt;\0&lt;/code&gt;替换为空格&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;综合起来：不断地查询目标 IP 地址和端口的网络连接，找到与之相关的进程 ID，并显示该进程的命令行。每隔 0.2 秒刷新一次，持续监控这个连接对应的进程。&lt;/p&gt;
&lt;p&gt;跑了一阵子，发现 $pid 可能有多行。囧，只能用双层 &lt;code&gt;while&lt;/code&gt; 了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  while true; do ss -tanp state established 'dport = 2333' | awk 'match($0,/pid=([0-9]+)/,m){print m[1]}' | while read -r pid; do echo $(date '+%F %T') $pid $(readlink -f /proc/$pid/cwd) $(tr '\0' ' ' &amp;lt;/proc/$pid/cmdline); done ;  done;
&lt;/code&gt;&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 28 Nov 2024 09:45:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-28:/2024/stdout-24</guid><category>stdout</category></item><item><title>如何给职场老登们提意见</title><link>https://blog.est.im/2024/stdin-19</link><description>&lt;p&gt;老登们从来不抱怨环境差，因为环境差就是他们造成的。哈哈哈。开个玩笑。&lt;a href="https://news.ycombinator.com/item?id=42223099"&gt;HN上&lt;/a&gt;看到一篇&lt;a href="https://newsletter.weskao.com/p/how-to-give-a-senior-leader-feedback-without-getting-fired"&gt;How to give a senior leader feedback without getting fired&lt;/a&gt; 如何在不丢工作的前提下，向资深管理者提出反馈，觉得有用。上班打工这么多年，发现沟通与影响力太真实了。摘录几条：&lt;/p&gt;
&lt;h3&gt;1. 更多、更好、更棒，而不是二极管&lt;/h3&gt;
&lt;p&gt;🚫 “新员工培训欠缺”——老登：“你懂完了？就你会培训？滚“&lt;br /&gt;
✅ “我们可能需要为新员工提供更多指导” —— “的确现有的培训不够，还得加强”&lt;/p&gt;
&lt;p&gt;二元的指责，意味着要么有培训，要么没培训，意味着这是对老登领导地位的威胁。&lt;/p&gt;
&lt;h3&gt;2. 拿自己当例子&lt;/h3&gt;
&lt;p&gt;🚫 “你应该试试 X 技术。”&lt;br /&gt;
✅ “我曾经为此而苦苦挣扎，当我尝试 X 时，它真的很有帮助。”&lt;/p&gt;
&lt;h3&gt;3. 外交式措辞&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;我们可能想试试......&lt;/li&gt;
&lt;li&gt;我想知道是不是......&lt;/li&gt;
&lt;li&gt;也许我们可以......&lt;/li&gt;
&lt;li&gt;你怎么看......&lt;/li&gt;
&lt;li&gt;一种方法可能是......&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. 数据支撑对比&lt;/h3&gt;
&lt;p&gt;🚫 “这个项目麻烦您老给我们多指点”  &lt;br /&gt;
✅ “我们发现，我们同客户每周都评审一轮设计稿时，他们往往对最终都比较满意；而对于现在这个项目，如果能在早期多确认一些事，可以帮助我们在某个方向上深入进展的时候，确保和目标是对齐的，并防止返工。”&lt;/p&gt;
&lt;p&gt;🚫 “团队需要更明确定个优先级”  &lt;br /&gt;
✅ “上个月当我们都专注于网站更新时，团队取得了大幅度进步；如果这个月，为团队制定一两个明确的重点事项，这样可以让每个人更加聚焦“&lt;/p&gt;
&lt;p&gt;🚫 “我们应该花更多时间培训新人员工”&lt;br /&gt;
✅ “记得Steve来的第一周，都在投入培训，他很快就跟上了速度。一点前期时间投入看上去得到了很好的回报，为我们的下一位员工采用类似的培训方法，帮助他们同样快速地提高。你觉得怎么样？&lt;/p&gt;
&lt;p&gt;作者推荐三个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以清晰、可操作的建议结束&lt;/li&gt;
&lt;li&gt;展示更新方法的好处&lt;/li&gt;
&lt;li&gt;保持简单、合乎逻辑和积极&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建议熟读英语的可以看看原文。作者还有一篇 &lt;a href="https://newsletter.weskao.com/p/super-specific-feedback"&gt;如何给下属训话&lt;/a&gt; 我觉得写得也挺好。&lt;/p&gt;
&lt;p&gt;翻HN的时候发现很惊人，大概意思是，如果你发现需要花言巧语(fluff up)才听得进去，那么高层已经烂透了，最好开始润色简历。。。。。好吧。作者这篇标题就叫在“不丢工作”的前提下如何向上反馈。都没错。人和人的信任在利益面前都很脆弱：职位低的担心自己，因为很有可能因为狗屁原因就莫名其妙丢了工作；职位高的最害怕丢脸，怕输给资历没自己老，职级比自己低的。陷入猜疑链了。highly effective communication 难呀。大多数评论是：&lt;a href="https://www.manager-tools.com/2012/02/do-not-give-feedback-your-boss-hall-fame-guidance"&gt;不值得给老板提意见&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;权力能量不对等&lt;/li&gt;
&lt;li&gt;过激对抗风险&lt;/li&gt;
&lt;li&gt;损坏关系&lt;/li&gt;
&lt;li&gt;工作没辣&lt;/li&gt;
&lt;li&gt;误会&lt;/li&gt;
&lt;li&gt;破坏汇报关系&lt;/li&gt;
&lt;li&gt;“开放”只是口号，说说而已&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🤣🤣🤣🤣&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Sun, 24 Nov 2024 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-24:/2024/stdin-19</guid><category>stdin</category></item><item><title>ATProto之言论 自由和触达的分离</title><link>https://blog.est.im/2024/stderr-16</link><description>&lt;p&gt;今天&lt;a href="https://news.ycombinator.com/item?id=42215932"&gt;刷到&lt;/a&gt;个好玩的。先说下背景：&lt;/p&gt;
&lt;p&gt;2019年，时任Twitter CEO 的 Jack Dorsey &lt;code&gt;@jack&lt;/code&gt; 当时内部&lt;a href="https://twitter.com/jack/status/1204766078468911106"&gt;资助&lt;/a&gt; 五个去中心化的社交媒体项目，其中之一叫 &lt;a href="https://bsky.social"&gt;Bluesky&lt;/a&gt;，&lt;a href="https://twitter.com/jack/status/1427315839666118662"&gt;后来&lt;/a&gt;由Jay Graber成立独立公司独立运营。其核心卖点是一个叫 AT协议 (Authenticated Transfer Protocol，有趣的是 AT 也是 &lt;code&gt;@&lt;/code&gt; 这个符号的称呼) ，基于这个协议搭建的分布式社交网络。官服和app上线叫  https://bsky.app 。&lt;/p&gt;
&lt;p&gt;2022年10月，世界首富 Elon Musk $440亿刀买下Twitter，2024年大选推波助澜，在11月成功助力懂王 &lt;code&gt;@realDonaldTrump&lt;/code&gt; 重夺总统宝座， 特别多X.com的“自由派”认为是天塌了，于是纷纷出逃。所以 bsky 用户增长迅猛，有超过 mastodon、Threads和nostr的趋势。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mastodon 的问题是，RoR又慢又重，站长们带不动&lt;/li&gt;
&lt;li&gt;threads 主要是反派从良，大家还是怕犹太人老板惦记&lt;/li&gt;
&lt;li&gt;nostr 币圈味太冲&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看过X的就知道上面的黄推、币圈电诈、民间政客特别多，如何在一个无法集中管理的网络里去掉杂音，保留有意思的内容，很具有挑战的。ATProto提出了一个概念叫做  &lt;a href="https://atproto.com/guides/overview#speech-reach-and-moderation"&gt;Speech and Reach&lt;/a&gt;。我理解，它把言论自由和言论可触达性分开。你说啥话没人管，但是你的话谁能听见是另一回事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Atproto's model is that speech and reach should be two separate layers, built to work with each other. The “speech” layer should remain permissive, distributing authority and designed to ensure everyone has a voice. The “reach” layer lives on top, built for flexibility and designed to scale.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说实话，当时我看到个设定觉得合理，但是不知道有啥用，直到今天我看到了Django（Python Web框架）的作者 Simon Willison &lt;code&gt;@simonw&lt;/code&gt; 分享的&lt;a href="https://bsky.app/profile/simonwillison.net/post/3lbkdkz6eh22l"&gt;一个有意思的玩法&lt;/a&gt;——挂人。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am utterly delighted by this subversive use of the Bluesky label feature, where you can subscribe to a custom app that then adds visible labels to profiles&lt;br /&gt;
This one shows you which posh expensive private school British public figures attended, plus their current fees&lt;br /&gt;
https://bsky.app/profile/daddys.cash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;是的你没看错，就是挂人。这个 daddys.cash （读作：爹滴点现金）账号的作用是，把 bsky.app 上正米字旗🇬🇧大V，上过私校的作为“标签”放到账号信息栏。甚至还包含私校的学费，时刻提醒你阶级差距。英国的私校是个圈子，非常抱团，在证界和商界非常具有影响力，这可太“同窗传承吾辈责”了。在评论区，你甚至还能看到有账号专注把正星条旗🇺🇸大V背后的政党派别和选举献金标出来。英美的内政和外交是有偏向性的维护这群人的世界观和利益。&lt;/p&gt;
&lt;p&gt;为什么说这个功能是挂人？如果推广开了，这玩意极大降低了饭圈和小鬼们拿来给人贴标签的门槛，而且传播性极快。假如在一个平行世界里，bsky在国内上线，就现在的形式，很快🐒和🌸会形成两个阵营互相敌对对喷。&lt;/p&gt;
&lt;p&gt;但如果你抛开网络论战，带入线下社交，这个功能可能会带来一个意想不到的效果——IRL的社会压力回来了。能在网络上肆无忌惮的彪悍发言，会考虑到今后被人 label 怎么办？实际上大多数人当着其他人的面说话还是很矜持的，得考虑个场合和面子。深怕别人背地里议论着你什么。这他人指指点点，不正好就是“贴标签”。&lt;/p&gt;
&lt;p&gt;ATProto 的实现&lt;a href="https://news.ycombinator.com/item?id=39684027"&gt;细节&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's broadly a system for publishing metadata on posts called "Labels". Application clients specify which labeling services they want to use in request headers. Those labels get attached to the responses, where they can then be interpreted by client.&lt;br /&gt;
This is an open system. Clients can choose which labelers they use, and while the Bluesky client hardcodes the Bluesky moderation another client can choose a different primary Labeler. Users can then add their community labelers, which I describe below. We aim to do the majority of our moderation at that layer. There are also "infrastructure takedowns" for illegal content and network abuse, which we execute at the services layer (ie the relay).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;技术上来说，一个内容顶真不顶，你自己可以选择 Label 供应商；传播上来说，如果你影响力超大，你说话就得委婉，考虑万一被人贴上不好的标签的后果。所以一开始atproto这个拆分 speech 和 reach 的设计就挺有意思。要么你口无遮拦嗓门小，你谨言慎行上热搜，发言是自由的，但是传播成什么样可不是你说了算。&lt;/p&gt;
&lt;p&gt;这个机制当然也有很多问题，比如如果你是小人，你可以换各种马甲来诋毁和三人成虎。怎么办呢？实名制？social credit？&lt;/p&gt;
&lt;p&gt;总之，这是一个有意思的设计。比X现在那套黑盒子封号，灵活的 community notes 更创新。&lt;code&gt;@jack&lt;/code&gt; 这一波看来是真的懂这行搞出来的新玩意。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Sat, 23 Nov 2024 17:22:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-23:/2024/stderr-16</guid><category>stderr</category></item><item><title>供应链 "supplier" 的迷思</title><link>https://blog.est.im/2024/stdin-18</link><description>&lt;p&gt;刷到个个视频 《&lt;a href="https://www.bilibili.com/video/BV1vhUxYtEeT"&gt;桑迪.门罗：看到2500个中国人在求知若渴地上你的课，就都明白了！&lt;/a&gt;》。我对 Sandy Munro 这老爷子有点&lt;a href="https://blog.est.im/202105/stdin-004"&gt;印象&lt;/a&gt;，之前他高呼看不懂美的的注塑工艺。&lt;/p&gt;
&lt;p&gt;这个视频主持人和他中美汽车行业对比，主持人说中国车便宜是因为 labor 便宜。Sandy反驳：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;说一辆车里面劳动力成本可能只占整体5%到15%，但中国人生产效率是120%，老美是 80% 因为要抽大麻，墨西哥日本是90%，欧洲是 70%。车的主要成本是物料成本，raw materials&lt;/li&gt;
&lt;li&gt;然后又说了中国行业碾压的最大优势是：material supply极其便宜，稳定可靠。欧美的原材料供应都极其昂贵。&lt;/li&gt;
&lt;li&gt;supply的优势还在于国内的供应商敢于不要利润。听上去这就是打价格战吃补贴的套路吧？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近网上所有聪明的老外都说只要引入自动化，然后寻找廉价的供货商，就能打败国内产业。国内聪明专家也大吹特吹，供应链优势。&lt;/p&gt;
&lt;p&gt;但是这个说法，我觉得还需要进一步推敲。所谓供应链、原材料优势，其实归根结底就是上游产业优势。上游产业的成本构成呢？也是吃人的红利，然后转变为生产效率和成本优势。&lt;/p&gt;
&lt;p&gt;汽车产业为啥被 off-shore 了，因为在金融行业看来，干实业的就是利润的material supply。没啥技术含量，赚钱的上限就在哪里。欧美大学里就没几个本地人读械制造专业。人都没有，更不要说人才了。&lt;/p&gt;
&lt;p&gt;中国“制造”这个概念也很有意思，比如Apple喜欢说得很直白，这就是 assemble。但是你design 就不是assemble了？要硬拉扯，加州的工作，无非是把各种创意和工业设计拼凑到一起的功夫？在办公室打键盘，和在电子厂打螺丝，除了&lt;a href="https://blog.est.im/2024/stderr-14"&gt;一个软一个硬&lt;/a&gt;，前者 manufacture 的是点子，后者是实物。&lt;/p&gt;
&lt;p&gt;所以归根结底还是人矿优势。超负荷压榨。现在国内也没几个人读机械制造了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 21 Nov 2024 06:35:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-21:/2024/stdin-18</guid><category>stdin</category></item><item><title>强行入睡方法 v2.0</title><link>https://blog.est.im/2024/stderr-15</link><description>&lt;p&gt;书接上回《&lt;a href="https://blog.est.im/2024/stdout-05"&gt;快速入睡的技巧和原理&lt;/a&gt;》&lt;/p&gt;
&lt;p&gt;前几天跟朋友聊天，有一个想法萌生在脑海里：&lt;/p&gt;
&lt;p&gt;因果论是人类发明和掌握语言之后的一个副产品&lt;/p&gt;
&lt;p&gt;什么是因果？一个东西变动，导致另一个东西变动。但是大千世界哪里来的所谓「一个」东西？&lt;/p&gt;
&lt;p&gt;其实都是一坨东西扭来扭去，然后另一坨东西晃来晃去。人的器官能感知的变化是连续光滑的&lt;/p&gt;
&lt;p&gt;但语言和时序是离散的。这就导致万千思绪，最后被压扁成两件事：好事和坏事。&lt;/p&gt;
&lt;p&gt;情绪和压力都是基于「事」这个东西上的。事之所以被称为、形成一件事，和语言环境密不可分。&lt;/p&gt;
&lt;p&gt;给东西起名字是最困难的，就像写代码给class起名字一样。&lt;/p&gt;
&lt;p&gt;但是一件「事」一旦有了名字，它就「成精」了。一件「事」它有自己的边界和形态，事能发起技能和施加影响，事有长处和弱点，有出生和死亡。「事」就是成年人在无数个夜晚思来想去，辗转难眠的心中之困。很多人被压垮就是一句话的事，被开导也可能因为一句精辟而准确的点拨。&lt;/p&gt;
&lt;p&gt;但从纯「唯物」的角度来说，事存在吗？不存在。它只是内心对外界pattern的一个把控和约定。把这个核心问题确定之后，我尝试了一种船新入睡方法：打破这个pattern。&lt;/p&gt;
&lt;p&gt;上一篇的方法，放下理性推理，这个其实有点难，而且有的时候就是烦恼多，无法彻底放下。这次 入睡 2.0 的要义更简单，反其道而行之，既然放不下各种想法，那么就多想，让你无暇顾及困难。具体的说&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;舒服的躺下。一定控制呼吸节奏，慢下来，平稳下来&lt;/li&gt;
&lt;li&gt;类似 Marvel 电影那个片头，各种英雄集结pose和招牌动作，开始你的各种思考&lt;/li&gt;
&lt;li&gt;但是每一个思考不能按按常理出牌，要快速切换到另一个思考。比如你纠结美国队长，那么你要快速把队长的盾牌切换到冬兵；冬兵身后漫天大雪景色不错，你发现一只麋鹿，麋鹿唱起了圣诞歌谣在一件小屋里，小屋里有温暖的书籍你正在静静有味的阅读。阅读的文字怎么是天体物理课本看不懂，公式符号好复杂让我想起了初中课堂，课堂上前排女同学的长发看上去很好玩，突然下课领响了。。。。&lt;/li&gt;
&lt;li&gt;如果你发现我上面这一串胡言乱语就像梦境一样，恭喜你已经睡着了。。。。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里有个关键点就是一定要类似 flash card 那样快速翻牌，不要在一个点上纠缠。如果你发现推理不对，有地方有问题进行不下去，那你肯定睡不着。人这个老毛病就是去纠结 something is wrong。放弃挣扎和内耗，随时跑题，就像一个孩童一样，不要尝试去理解这个疯狂的世界，就应该天马行空的去不停的变换注意力。当你累了，自然就睡了。&lt;/p&gt;
&lt;p&gt;这个方法还有一点要注意，一定要去想「具象」的画面，而不是抽象的道理。最好你就是画面的主角，融入其中。比如你想象在看书，不要弄成电影镜头那样第三视角远远地看，你要想象这本书非常巨大， 从你脑门一直到你胸口那么大，镶嵌在你身体里，是你的一部分，你得摇头晃脑的去逐行扫描的观摩。书上的文字会随时飞起变成海浪把你吃掉淹没进入下一个场景。一定要身临其境，想象你身体每一个器官和毛孔都在被这个场景吞没。&lt;/p&gt;
&lt;p&gt;遇到可怕或者矛盾的地方，直接抛之脑后，揪住一个小点立刻切换全新场景！每一个场景不要停留太久，太久了你就会生疑心，怀疑这是不是假的？赶紧跑题，挑个别的。避免惊恐刺激的，选一个平滑的，不要太多注意力的，越舒服越放松的场景，越容易入睡。&lt;/p&gt;
&lt;p&gt;今日的疯狂梦呓就到这了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 14 Nov 2024 09:33:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-14:/2024/stderr-15</guid><category>stderr</category></item><item><title>日本为啥没有出色的软件行业</title><link>https://blog.est.im/2024/stdin-17</link><description>&lt;p&gt;从&lt;a href="https://news.ycombinator.com/item?id=42077886"&gt;HN&lt;/a&gt;上看到&lt;a href="https://www.disruptingjapan.com/the-forgotten-mistake-that-killed-japans-software-industry/"&gt;这篇&lt;/a&gt;。没看正文之前，我头脑浮现的是管培生，大连的软件外包，日企那种细致又无用的上面拉spec下面填实现的功序长幼之分等等。&lt;/p&gt;
&lt;p&gt;翻译有添油加醋，其中 Keiretsu 意思是“家族企业集团”，前身是日本财阀（Zaibatsu）比如住友Sumitomo、三井Mitsui、三菱Mitsubishi和安田Yasuda等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在60年代和70年代，软件往往是为定制且非常、非常昂贵的硬件编写的，软件需求通常作为整体购买合同的一部分进行谈判。软件并不被看作是一个独立的产品，更像是一种服务，类似于集成、培训以及持续的支持和维护。它通常是按时间和材料收费，有时为了促成交易，软件甚至会免费赠送。真正赚钱的还是硬件。&lt;br /&gt;
日本的家族企业在“大型主机时代”表现出色。比如富士通、NEC和日立。尽管在60、70年代并没有打败IBM和Univac在全球的主导地位，但它们在小型计算机和大型办公系统领域表现得相当不错。&lt;br /&gt;
当PC革命在1980年代末到来时，日本整体工业的准备工作完全不足，PC市场很快围绕着少数几个标准化的操作系统和硬件架构形成。日本的家族企业在“硬件”方面表现得相当不错，但非定制或“包装软件”的市场对所有人来说都是全新的。它要求取悦客户，并在客户意识到之前就知道他们想要什么。&lt;br /&gt;
但那是80年代日本经济超级发达和繁荣，到处都能赚钱，市场保护良好。对于家族企业来说，专注于赚快钱更有效率。每个家族企业集团都有自己的技术公司，这些公司开始销售个人电脑和软件，部分面向消费者，但真正的大钱是在企业销售中。由于家族企业集团喜欢把生意留在“家族”内，这些技术公司通过向集团内的“俘获”客户销售产品而不断成长并获利。就像以前一样，他们通过集成和定制服务赚取了真正的利润。&lt;br /&gt;
大型系统集成公司（Systems Integration，SI）成为了强有力的市场参与者，而日本的软件公司从未需要在全球范围内竞争，甚至连国内公司之间也没有竞争。&lt;br /&gt;
所以日本的软件行业在80年代和90年代保持着与“卖大型机硬件”时代相似的状态。软件只需要刚刚够用，能跟客户签下合同就行，由于客户来自家族企业，家族企业内部及其封闭死板，很少同外边世界交流，所以水准要求实际上是非常低的。&lt;br /&gt;
但没关系，只要行业繁荣，没人介意在 家族企业 关系户企业内部大肆花钱，所有那些“小小的软件缺陷”总能在“下一一定”阶段中修复。&lt;br /&gt;
软件开发变成了一种“打勾”式的任务。一旦客户提出需求，签下合同，再想办法去弥补某个功能。&lt;br /&gt;
这种情况不仅让日本错失了全球软件行业的发展机会，还标志着日本各行业创新崩溃的开端。在接下来的30年里，软件将成为推动创新和效率的关键驱动力。但是，通过将他们的IT战略外包给单一的系统集成商，日本企业实际上把自己绑上了锚，每年都在技术曲线上越来越落后。&lt;br /&gt;
日本至今尚未从这种情况中恢复过来。即便是今天，大多数企业系统仍远远落后于全球竞争者。但正如我们稍后将看到的，现在有一些变化可能会让日本迎来一次跨越式的发展。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;怎么感觉很像信创和军品开发圈子。。。。国内相似 Keiretsu 的例子就是中字头央企，比如CASC、CASIC、CETC等等。软件不值钱，卖盒子才能拿到回款。工期紧，ppt画大饼，不和外界交流，因为保密和资质。靠关系吃饭，总包，分包，集成什么的，但是一旦突然财政断奶就。。。。。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 13 Nov 2024 06:08:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-13:/2024/stdin-17</guid><category>stdin</category></item><item><title>体力劳动和脑力劳动</title><link>https://blog.est.im/2024/stderr-14</link><description>&lt;p&gt;今日跟娃讲道理，为啥要学习，因为人要长大活下去，得工作挣钱；工作无非分为在乡下、城里；靠拳脚打斗赢得人生的日子可能不太现实，还是得靠技能。&lt;/p&gt;
&lt;p&gt;然后就跟他讲，你愿意做体脑力劳动，还是力劳动？前者坐办公室吹空调把活儿给干了。后者就不得不风吹日晒雨淋。既然要选择做办公室，你就得把学习成绩务必搞好。&lt;/p&gt;
&lt;p&gt;又想了下，这个个所谓的“白领”劳动其实也分脑力劳动中的体力活儿，和脑力劳动中的技术活儿。我跟他说了个最简单的比喻：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果是语文、英语问题，只要你阅读量足够多，那么只要填写了，答案八九不离十；&lt;/li&gt;
&lt;li&gt;但是数学题，即便你写得再多，只要中间环节任何一个步骤不会，或者不小心写错了，那么你（几乎）不可能得到正确答案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里可以延展一下，工作可以分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按件计费，做得多挣得多的活儿&lt;/li&gt;
&lt;li&gt;如果瞎蒙，都是无用功，除非你精准命中目标🎯的活儿&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实脑力劳动这个行业很残酷，半导体和互联网就有严重的「赢家通吃」现象。头部企业拿走99%的市场和利润，剩下 0.99% 的又被第二名吃干抹净。人类发展出复杂社会建设如此高度的文明，起点就是一点一点的动脑子，脑子这个玩意有一点好，他能按照某种「想法」预测未来。所谓几个男人只要坐在一起闲下来就会诞生一个「点子王」。但是要系统性的搞出一项工程，建设一个国家，创造一个文明，仅仅靠几个零星的是不够的。得靠一个又一个的突破。有些突破不是线形的，靠庸才堆人口是积累不出来的，得靠天才。&lt;/p&gt;
&lt;p&gt;比如爱因斯坦的相对论，其实通俗演义把这个事可能没讲明白，相对论其实有两套（有趣的是，哥德尔也有两套），前一套是特别版，如果老爱不做出来也会有他人做，水到渠成的事；但是通用相对论就是震古烁今让人可望不可及的存在了。&lt;/p&gt;
&lt;p&gt;又想起一个著名的段子，国内可能安排到 尼古拉·特斯拉 头上的：画一条线$1美元，知道在哪里画 $9,999 刀&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Henry Ford once balked at paying $10,000 to General Electric for work done troubleshooting a generator, and asked for an itemized bill. The engineer who performed the work, Charles Steinmetz, sent this: "Making chalk mark on generator, $1. Knowing where to make mark, $9,999." Ford paid the bill. &lt;br /&gt;
According to Scott, Steinmetz listened to the generator and scribbled computations on the notepad for two straight days and nights. On the second night, he asked for a ladder, climbed up the generator and made a chalk mark on its side. Then he told Ford’s skeptical engineers to remove a plate at the mark and replace sixteen windings from the field coil. They did, and the generator performed to perfection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有一个&lt;a href="https://www.zhihu.com/answer/2769220517"&gt;关于程序员的段子&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如何看待程序员抄代码还拿着高薪这一现象？&lt;br /&gt;
会复制粘贴值1块，知道去哪复制值5K，知道粘贴在哪值5K，粘贴完了能跑起来值10K&lt;br /&gt;
如果还会backspace去掉bug，那不是10k能打住了&lt;br /&gt;
能带领一伙人复制粘贴值20k&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有人说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码也就asiic值128个字符，连字典都不用抄。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个又想到。如果给猴子一个机械键盘，能无意中敲出金瓶梅吗？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数学上，问题简化为一个无限长的纸带随机生成CJK字符，那么恰好其中一段长度的字符完全等同于《金瓶梅》吴中初刻本全文内容的概率不为0&lt;/li&gt;
&lt;li&gt;物理上，如果是一个特定品牌的机械键盘、特定品种的猴子，那么不要说敲一部白话文小说了，敲一个完整的句子概率都是 0 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为啥敢这么说？因为物理时空从根本上说，归根结底不是连续的，这个「根本」就是普朗克长度。气体、液体只能吸收特定 eV 的能量，高了低了都不行。比如氧气、N₂就只吸紫外线，透过可见光；氯气吸收蓝光，所以看起来就是黄绿色；一氧化二氢和二氧化碳吃红外线所以容易搞出温室效应。晶体吃高于间隙的「能带」，金属通吃。从这个意义上来说，由生理能量触发神经控制肌肉做出脸滚键盘不是真随机，而是一定边界下可预测的长序列。&lt;/p&gt;
&lt;p&gt;总结一下，最值钱的脑力劳动无法随机积累达到。今日份的胡思乱想就到这了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Wed, 06 Nov 2024 06:51:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-06:/2024/stderr-14</guid><category>stderr</category></item><item><title>白嫖百度网盘“单次转存数”500限制</title><link>https://blog.est.im/2024/stdout-23</link><description>&lt;p&gt;找了个资源，点击保存，居然提示充SVIP。看了下免费用户每次最多保存500份文件。本来找资源就白嫖，让我充钱？&lt;/p&gt;
&lt;p&gt;研究了一会儿，发现可以搞。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先你去你网盘里建立个目录 &lt;code&gt;0000-0500&lt;/code&gt;，准备存文件。这么起名字是因为你在自己网盘里多选也是最多选500个，所以每次存一个目录用来对照数量&lt;/li&gt;
&lt;li&gt;分享链接里文件列表默认只展示前100条，是惰性加载，所以请用鼠标一直反复向下滚，务必拉到底，然后点击「名称」排序。这样方便对比有没有漏掉&lt;/li&gt;
&lt;li&gt;F12打开 console 并粘贴下面的js。如果这一步看不懂建议直接放弃  &lt;br /&gt;
    Array.prototype.slice.apply(document.querySelectorAll(&lt;br /&gt;
      '.share-list dd.open-enable&amp;gt;span'&lt;br /&gt;
    ), [0, 500]).forEach((x)=&amp;gt;x.click())&lt;br /&gt;
这样就等效点击了前500个文件。点击保存。&lt;/li&gt;
&lt;li&gt;等全部存好，再次执行上一段代码，取消点击前500个文件。&lt;/li&gt;
&lt;li&gt;去你的网盘里新建个目录 &lt;code&gt;0500-1000&lt;/code&gt; ，用来保存下一批&lt;/li&gt;
&lt;li&gt;把上面代码里的 &lt;code&gt;[0,500]&lt;/code&gt; 改成 &lt;code&gt;[500,1000]&lt;/code&gt; 然后再执行一遍，保存到刚才创建的目录里。&lt;/li&gt;
&lt;li&gt;如果有更多的文件，在执行一遍 &lt;code&gt;[500,1000]&lt;/code&gt; 这一批，取消点击；然后改成 &lt;code&gt;[1000,1500]&lt;/code&gt; 如此反复。&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Fri, 01 Nov 2024 00:15:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-11-01:/2024/stdout-23</guid><category>stdout</category></item><item><title>Linux删除了 .ru 帐号？我查了一下</title><link>https://blog.est.im/2024/stdout-22</link><description>&lt;p&gt;&lt;a href="https://www.zhihu.com/question/1783342926"&gt;发生了什么事&lt;/a&gt;？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;日前，Linux 内核主要维护者之一 Greg Kroah-Hartman (Greg K-H) 提交了一项不寻常的“文档”更新，将数名具有 &amp;lt;.ru&amp;gt; 顶级域名邮箱的维护者，和一名明确为俄罗斯身份的维护者从 MAINTAINERS（维护者名录）文件除名。&lt;br /&gt;
这一提交已于上周日被 Linus Torvalds 拉取并包含于 6.12-rc4 版本的代码中。&lt;br /&gt;
已有来自于 AOSC 的开发者提交了 revert(尚未合并)，而 Linus 本人在评论中声明其对先前的 commit 知情并支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一开始，我以为是 “反向” &lt;a href="https://x.com/siyuanbear/status/1848644797076279545"&gt;厚脸皮PR&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img referrerpolicy="no-referrer" src="https://pbs.twimg.com/media/Gae0pQdbEAE-0JJ?format=jpg&amp;name=medium" /&gt;&lt;/p&gt;
&lt;p&gt;一般来说， github 上混一个 contributor 得贡献代码，很多人就改改文档、翻译就拿到一个“贡献者”称号（我也干过哈哈哈）。甚至还有离了大谱的，直接提一个 pull request 内容是把自己加到 contributors 文件里。。&lt;/p&gt;
&lt;p&gt;我以为是 Linux Foundation 发疯了，为了某种 “合规” 或者 sanction，掩耳盗铃，把 作者名字列表.txt 改改掩人耳目&lt;/p&gt;
&lt;p&gt;仔细看了下，发现好像并不是那么简单。这里是diff&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/torvalds/linux/commit/6e90b675cf942e50c70e8394dfb5862975c3b3b2"&gt;https://github.com/torvalds/linux/commit/6e90b675cf942e50c70e8394dfb5862975c3b3b2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里是更改后完整的 &lt;code&gt;MAINTAINERS&lt;/code&gt; 内容：&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/torvalds/linux/blob/6e90b675cf942e50c70e8394dfb5862975c3b3b2/MAINTAINERS"&gt;https://github.com/torvalds/linux/blob/6e90b675cf942e50c70e8394dfb5862975c3b3b2/MAINTAINERS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;直接通过 github API 拿到原始的 diff&lt;/p&gt;
&lt;p&gt;&lt;code&gt;curl -H'Accept: application/vnd.github.diff'  -sk 'https://api.github.com/repos/torvalds/linux/commits/6e90b675cf942e50c70e8394dfb5862975c3b3b2'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;乱写几个 prompt 丢给 gpt-4o，可以看到大概做了下列几处更改：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Device/Module&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Probable Date&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Author&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Email&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Acer Aspire 1 Embedded Controller&lt;/td&gt;
&lt;td&gt;~2018&lt;/td&gt;
&lt;td&gt;Nikita Travkin&lt;/td&gt;
&lt;td&gt;nikita@trvn.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alpha Port (Ivan Kokshaysky removed)&lt;/td&gt;
&lt;td&gt;~1992&lt;/td&gt;
&lt;td&gt;Ivan Kokshaysky (removed)&lt;/td&gt;
&lt;td&gt;ink@jurassic.park.msu.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ARM/Cirrus Logic CLPS711X Architecture&lt;/td&gt;
&lt;td&gt;~1996&lt;/td&gt;
&lt;td&gt;Alexander Shiyan&lt;/td&gt;
&lt;td&gt;shc_work@mail.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Baikal-T1 PVT Hardware Monitor&lt;/td&gt;
&lt;td&gt;~2015&lt;/td&gt;
&lt;td&gt;Serge Semin&lt;/td&gt;
&lt;td&gt;fancer.lancer@gmail.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GRE Demultiplexer Driver&lt;/td&gt;
&lt;td&gt;~2000&lt;/td&gt;
&lt;td&gt;Dmitry Kozlov&lt;/td&gt;
&lt;td&gt;xeb@mail.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LIBATA PATA Drivers&lt;/td&gt;
&lt;td&gt;~2003&lt;/td&gt;
&lt;td&gt;Sergey Shtylyov&lt;/td&gt;
&lt;td&gt;s.shtylyov@omp.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LIBATA SATA AHCI Synopsys DWC Driver&lt;/td&gt;
&lt;td&gt;~2014&lt;/td&gt;
&lt;td&gt;Serge Semin&lt;/td&gt;
&lt;td&gt;fancer.lancer@gmail.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Media Drivers for Ascot2E&lt;/td&gt;
&lt;td&gt;~2010&lt;/td&gt;
&lt;td&gt;Sergey Kozlov, Abylay Ospan&lt;/td&gt;
&lt;td&gt;serjk@netup.ru, aospan@netup.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Media Drivers for CXD2841ER&lt;/td&gt;
&lt;td&gt;~2015&lt;/td&gt;
&lt;td&gt;Sergey Kozlov, Abylay Ospan&lt;/td&gt;
&lt;td&gt;serjk@netup.ru, aospan@netup.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Media Drivers for Helene&lt;/td&gt;
&lt;td&gt;~2017&lt;/td&gt;
&lt;td&gt;Abylay Ospan&lt;/td&gt;
&lt;td&gt;aospan@netup.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Media Drivers for Horus3A&lt;/td&gt;
&lt;td&gt;~2018&lt;/td&gt;
&lt;td&gt;Sergey Kozlov, Abylay Ospan&lt;/td&gt;
&lt;td&gt;serjk@netup.ru, aospan@netup.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Media Drivers for LNBH25&lt;/td&gt;
&lt;td&gt;~2012&lt;/td&gt;
&lt;td&gt;Sergey Kozlov, Abylay Ospan&lt;/td&gt;
&lt;td&gt;serjk@netup.ru, aospan@netup.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NetUP PCI Universal DVB Devices&lt;/td&gt;
&lt;td&gt;~2010&lt;/td&gt;
&lt;td&gt;Sergey Kozlov, Abylay Ospan&lt;/td&gt;
&lt;td&gt;serjk@netup.ru, aospan@netup.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MIPS Baikal-T1 Platform&lt;/td&gt;
&lt;td&gt;~2015&lt;/td&gt;
&lt;td&gt;Serge Semin&lt;/td&gt;
&lt;td&gt;fancer.lancer@gmail.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NTB IDT Driver&lt;/td&gt;
&lt;td&gt;~2014&lt;/td&gt;
&lt;td&gt;Serge Semin&lt;/td&gt;
&lt;td&gt;fancer.lancer@gmail.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PPTP Driver&lt;/td&gt;
&lt;td&gt;~1996&lt;/td&gt;
&lt;td&gt;Dmitry Kozlov&lt;/td&gt;
&lt;td&gt;xeb@mail.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Renesas Ethernet AVB Driver&lt;/td&gt;
&lt;td&gt;~2013&lt;/td&gt;
&lt;td&gt;Sergey Shtylyov&lt;/td&gt;
&lt;td&gt;s.shtylyov@omp.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Renesas R-Car SATA Driver&lt;/td&gt;
&lt;td&gt;~2015&lt;/td&gt;
&lt;td&gt;Sergey Shtylyov&lt;/td&gt;
&lt;td&gt;s.shtylyov@omp.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Renesas SuperH Ethernet Driver&lt;/td&gt;
&lt;td&gt;~2000&lt;/td&gt;
&lt;td&gt;Sergey Shtylyov&lt;/td&gt;
&lt;td&gt;s.shtylyov@omp.ru&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Synopsys DesignWare APB SSI Driver&lt;/td&gt;
&lt;td&gt;~2010&lt;/td&gt;
&lt;td&gt;Serge Semin&lt;/td&gt;
&lt;td&gt;fancer.lancer@gmail.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UFS Filesystem&lt;/td&gt;
&lt;td&gt;~1974&lt;/td&gt;
&lt;td&gt;Evgeniy Dushistov&lt;/td&gt;
&lt;td&gt;dushistov@gmail.com&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果说作者 @gregkh 作出这个改动的动机说&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remove some entries due to various compliance requirements &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么 BAIKAL 这个是明显会去掉。其余的改动，我能认出来的比较重要的有 PPTP Driver，其它都是五花八门驱动的维护者，感觉就算去掉， impact 的功能也不多。&lt;/p&gt;
&lt;p&gt;当然你也可以说 first they came for the ... 我就不继续展开了&lt;/p&gt;
&lt;p&gt;下面列举几个可能不那么重要，但是我觉得很容易被忽略的事实：&lt;/p&gt;
&lt;h3&gt;一、 .ru 的邮箱被全部移除了吗？&lt;/h3&gt;
&lt;p&gt;是的。最新版本 &lt;a href="https://github.com/torvalds/linux/blob/master/MAINTAINERS"&gt;&lt;code&gt;MAINTAINERS&lt;/code&gt;&lt;/a&gt; 文件里我搜了 &lt;code&gt;.ru&lt;/code&gt;、&lt;code&gt;russia&lt;/code&gt; 关键词没找到了。干干净净。当然后期会不会加回来我不知道。&lt;/p&gt;
&lt;h3&gt;二、 俄国人对 Linux 的贡献被抹掉了吗？&lt;/h3&gt;
&lt;p&gt;第一，上面这些人的对应代码贡献，目前并没有删掉。&lt;/p&gt;
&lt;p&gt;第二，Linux 源码根目录还有一个 &lt;a href="https://github.com/torvalds/linux/blob/master/CREDITS"&gt;&lt;code&gt;CREDITS&lt;/code&gt;&lt;/a&gt; 文件，里面包含了下列俄国人：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;N: Yuri Per
E: yuri@pts.mipt.ru
D: Some smbfs fixes
S: Demonstratsii 8-382
S: Tula 300000
S: Russia

N: Alexey Kuznetsov
E: kuznet@ms2.inr.ac.ru
D: Author and maintainer of large parts of the networking stack

N: Stas Sergeev
E: stsp@users.sourceforge.net
D: PCM PC-Speaker driver
D: misc fixes
S: Russia

&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;三、 俄国人不能参与 Linux 项目了吗？&lt;/h3&gt;
&lt;p&gt;我在这里想补充一个背景知识，什么是 Linux Kernel 的 &lt;strong&gt;maintainer&lt;/strong&gt; ？&lt;/p&gt;
&lt;p&gt;内核功能繁多，Linus 老爷子一个人照看不过来，得把拆分成各个模块，授权给相应的 负责人(maintainer)，给予他们检查、合并代码的权限。Linux基金会（注册地：美国）会给他们配置一个专用邮件列表用来主持专项议事&lt;/p&gt;
&lt;p&gt;上面这句话，如何理解？可能对某些简中读者没看明白。简单的说：.ru 用户还是可以以 developer 身份向别的 maintainer 提交代码。这里不得不提到那个出名的 kernel git workflow&lt;/p&gt;
&lt;p&gt;这是普通 git 项目的工作流：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://git-scm.com/book/ms/v2/images/centralized_workflow.png" /&gt;&lt;/p&gt;
&lt;p&gt;这个是 linux kernel 的（图很老，大概这个意思）：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://chenweixiang.github.io/assets/linux_kernel_code_flow.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;普通人是没法直接向 mainline &lt;a href="https://github.com/torvalds/linux"&gt;https://github.com/torvalds/linux&lt;/a&gt;  提交代码的。这个社区甚至会给你一个&lt;a href="https://www.kernel.org/doc/html/latest/process/1.Intro.html"&gt;长长的文档&lt;/a&gt;教你一步一步如何提代码 &lt;/p&gt;
&lt;p&gt;不要说新功能了，一些老功能的 patch 要赶上主线发车窗口，你手续流程都很长。&lt;/p&gt;
&lt;p&gt;想给内核做贡献，你要面对的甚至都不是 Linus 本尊，恰好是这些 &lt;code&gt;MAINTAINERS&lt;/code&gt; 里列举的各位把关人。世界上绝大部分的人对 Linux 内核做贡献都是这样。 maintainer 是极少数，他们可以直接向 Linus 提改动。&lt;/p&gt;
&lt;p&gt;Linus 自己也说了，他是芬兰人，意思就是说他不想看到俄国人。啊这。能理解，不提倡！&lt;/p&gt;
&lt;h3&gt;四、maintainer 名单变化多吗？&lt;/h3&gt;
&lt;p&gt;从提交历史来看，&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/torvalds/linux/commits/master/MAINTAINERS"&gt;https://github.com/torvalds/linux/commits/master/MAINTAINERS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;人员进进出出很频繁。但是 @gregkh 这种在 &lt;code&gt;char-misc&lt;/code&gt; 里搭车进去，的确偷偷摸摸。&lt;/p&gt;
&lt;h3&gt;五、 .cn 会被波及吗？&lt;/h3&gt;
&lt;p&gt;这个问题我无法回答，但是可以列一下现在有的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一大堆 LOONGARCH 龙芯的驱动和各种模块&lt;/li&gt;
&lt;li&gt;海光 HYGON 驱动&lt;/li&gt;
&lt;li&gt;简中翻译 Alex Shi &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#120;&amp;#115;&amp;#64;&amp;#107;&amp;#101;&amp;#114;&amp;#110;&amp;#101;&amp;#108;&amp;#46;&amp;#111;&amp;#114;&amp;#103;"&gt;&amp;#97;&amp;#108;&amp;#101;&amp;#120;&amp;#115;&amp;#64;&amp;#107;&amp;#101;&amp;#114;&amp;#110;&amp;#101;&amp;#108;&amp;#46;&amp;#111;&amp;#114;&amp;#103;&lt;/a&gt; Yanteng Si &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#115;&amp;#105;&amp;#121;&amp;#97;&amp;#110;&amp;#116;&amp;#101;&amp;#110;&amp;#103;&amp;#64;&amp;#108;&amp;#111;&amp;#111;&amp;#110;&amp;#103;&amp;#115;&amp;#111;&amp;#110;&amp;#46;&amp;#99;&amp;#110;"&gt;&amp;#115;&amp;#105;&amp;#121;&amp;#97;&amp;#110;&amp;#116;&amp;#101;&amp;#110;&amp;#103;&amp;#64;&amp;#108;&amp;#111;&amp;#111;&amp;#110;&amp;#103;&amp;#115;&amp;#111;&amp;#110;&amp;#46;&amp;#99;&amp;#110;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;繁体翻译 Hu Haowen &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#50;&amp;#48;&amp;#50;&amp;#51;&amp;#48;&amp;#48;&amp;#50;&amp;#48;&amp;#56;&amp;#57;&amp;#64;&amp;#108;&amp;#105;&amp;#110;&amp;#107;&amp;#46;&amp;#116;&amp;#121;&amp;#117;&amp;#116;&amp;#46;&amp;#101;&amp;#100;&amp;#117;&amp;#46;&amp;#99;&amp;#110;"&gt;&amp;#50;&amp;#48;&amp;#50;&amp;#51;&amp;#48;&amp;#48;&amp;#50;&amp;#48;&amp;#56;&amp;#57;&amp;#64;&amp;#108;&amp;#105;&amp;#110;&amp;#107;&amp;#46;&amp;#116;&amp;#121;&amp;#117;&amp;#116;&amp;#46;&amp;#101;&amp;#100;&amp;#117;&amp;#46;&amp;#99;&amp;#110;&lt;/a&gt; https://github.com/srcres258/linux-doc 太原理工的人才！&lt;/li&gt;
&lt;li&gt;RADOS BLOCK DEVICE (RBD) Ilya Dryomov &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#105;&amp;#100;&amp;#114;&amp;#121;&amp;#111;&amp;#109;&amp;#111;&amp;#118;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#105;&amp;#100;&amp;#114;&amp;#121;&amp;#111;&amp;#109;&amp;#111;&amp;#118;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt; Dongsheng Yang &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#100;&amp;#111;&amp;#110;&amp;#103;&amp;#115;&amp;#104;&amp;#101;&amp;#110;&amp;#103;&amp;#46;&amp;#121;&amp;#97;&amp;#110;&amp;#103;&amp;#64;&amp;#101;&amp;#97;&amp;#115;&amp;#121;&amp;#115;&amp;#116;&amp;#97;&amp;#99;&amp;#107;&amp;#46;&amp;#99;&amp;#110;"&gt;&amp;#100;&amp;#111;&amp;#110;&amp;#103;&amp;#115;&amp;#104;&amp;#101;&amp;#110;&amp;#103;&amp;#46;&amp;#121;&amp;#97;&amp;#110;&amp;#103;&amp;#64;&amp;#101;&amp;#97;&amp;#115;&amp;#121;&amp;#115;&amp;#116;&amp;#97;&amp;#99;&amp;#107;&amp;#46;&amp;#99;&amp;#110;&lt;/a&gt; ceph-devel@vger.kernel.org&lt;/li&gt;
&lt;li&gt;一大堆 @huawei.com @linux.alibaba.com的各种驱动和模块&lt;/li&gt;
&lt;li&gt;可能有别的&lt;a href="https://blog.est.im/201906/stdout-003"&gt;大陆+港澳台公司&lt;/a&gt;邮箱我漏掉了。懒得看了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 &lt;code&gt;CREDITS&lt;/code&gt; 里鸣谢的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;N: Chih-Jen Chang
E: chihjenc@scf.usc.edu
E: chihjen@iis.sinica.edu.tw
D: IGMP(Internet Group Management Protocol) version 2
S: 3F, 65 Tajen street
S: Tamsui town, Taipei county,
S: Taiwan 251
S: Republic of China

N: Li Yang
E: leoli@freescale.com
D: Freescale Highspeed USB device driver
D: Freescale QE SoC support and Ethernet driver
S: B-1206 Jingmao Guojigongyu
S: 16 Baliqiao Nanjie, Beijing 101100
S: People's Repulic of China

N: Tsu-Sheng Tsao
E: tsusheng@scf.usc.edu
D: IGMP(Internet Group Management Protocol) version 2
S: 2F 14 ALY 31 LN 166 SEC 1 SHIH-PEI RD
S: Taipei
S: Taiwan 112
S: Republic of China
S: 24335 Delta Drive
S: Diamond Bar, California 91765
S: USA

&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;六、结束语&lt;/h3&gt;
&lt;p&gt;总的来说 Linux内核项目，包括不限于很多别的社区项目，还是英雄主义色彩很重的，这样的个人主义既可以说出“nVidia fuck you”，也完全有可能在某一天把主语丝滑切成 “Russia”。这压根就是同一个硬币的同一面（甚至都不是另一面）&lt;/p&gt;
&lt;p&gt;在国际地缘政治热火朝天、段视频AI诵读、&lt;a href="https://blog.est.im/2022/stderr-02"&gt;情绪控制终端&lt;/a&gt;满天飞的今天，讨论这些重要吗？有用吗？&lt;/p&gt;
&lt;p&gt;回答：不重要，没用&lt;/p&gt;
&lt;p&gt;但是对我个人而言，或许有那么一丢丢重要，有一丁点用。&lt;/p&gt;
&lt;p&gt;希望对你也有点用。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Thu, 24 Oct 2024 15:26:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-10-24:/2024/stdout-22</guid><category>stdout</category></item><item><title>ChatGPT 对我过往问题的吐槽</title><link>https://blog.est.im/2024/stdin-16</link><description>&lt;p&gt;看起来是 “凌晨3点” 写&lt;a href="https://blog.est.im/2024/stdout-19"&gt;javascript 节拍器&lt;/a&gt; 这事很不满啊。哈哈哈&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You're on macOS, building metronomes in JavaScript, which is cute. But let’s be real: spending your free time tinkering with oscillators in Terminal feels like the programming equivalent of playing the triangle in a rock band. “Look, everyone! I made a metronome!” 👏 …And now it’s just you and a beep, beep, beep wondering why you can’t stop tweaking code that only a clock could love. 🕰️&lt;br /&gt;
Oh, and what’s with those hyper-detailed questions? I bet when you watch movies, you’re that person pausing every five minutes to Google “Why did the villain’s cat blink in scene 3?” because there’s nothing you won’t overthink. Meanwhile, your poor Mac is just begging for a break, like, “Please... Can we NOT compile sound waves at 3 a.m.?” 🖥️&lt;br /&gt;
And hey, Mr./Ms. Terminal Expert, you’ve got all the tech know-how to build clever things but somehow still end up asking me for solutions like I’m your lifeline in this relationship. Did the JavaScript throw one unexpected token and you went, “Welp, time to bother ChatGPT again!”?&lt;br /&gt;
You: "CreateOscillator, metronome, web audio… I got this!”&lt;br /&gt;
Also you after two minutes: “Why isn't this working?!” 😂&lt;br /&gt;
But seriously, props to you for staying curious and diving deep. You’re like a mad scientist—except instead of creating life, you’re just making a metronome.&lt;br /&gt;
Roast level? Medium-well. 😎&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;半生不熟。哈哈哈。可以的。。&lt;a href="https://www.v2ex.com/t/1082158"&gt;V站主题&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">est</dc:creator><pubDate>Mon, 21 Oct 2024 13:49:00 +0800</pubDate><guid isPermaLink="false">tag:None,2024-10-21:/2024/stdin-16</guid><category>stdin</category></item></channel></rss>